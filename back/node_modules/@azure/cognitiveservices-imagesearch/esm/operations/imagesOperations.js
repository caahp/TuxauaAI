/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/imagesOperationsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a ImagesOperations. */
var ImagesOperations = /** @class */ (function () {
    /**
     * Create a ImagesOperations.
     * @param {ImageSearchClientContext} client Reference to the service client.
     */
    function ImagesOperations(client) {
        this.client = client;
    }
    ImagesOperations.prototype.search = function (query, options, callback) {
        return this.client.sendOperationRequest({
            query: query,
            options: options
        }, searchOperationSpec, callback);
    };
    ImagesOperations.prototype.details = function (query, options, callback) {
        return this.client.sendOperationRequest({
            query: query,
            options: options
        }, detailsOperationSpec, callback);
    };
    ImagesOperations.prototype.trending = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, trendingOperationSpec, callback);
    };
    return ImagesOperations;
}());
export { ImagesOperations };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var searchOperationSpec = {
    httpMethod: "GET",
    path: "images/search",
    urlParameters: [
        Parameters.endpoint
    ],
    queryParameters: [
        Parameters.aspect,
        Parameters.color,
        Parameters.countryCode,
        Parameters.count,
        Parameters.freshness,
        Parameters.height,
        Parameters.id,
        Parameters.imageContent,
        Parameters.imageType,
        Parameters.license,
        Parameters.market,
        Parameters.maxFileSize,
        Parameters.maxHeight,
        Parameters.maxWidth,
        Parameters.minFileSize,
        Parameters.minHeight,
        Parameters.minWidth,
        Parameters.offset,
        Parameters.query,
        Parameters.safeSearch,
        Parameters.size,
        Parameters.setLang,
        Parameters.width
    ],
    headerParameters: [
        Parameters.xBingApisSDK,
        Parameters.acceptLanguage,
        Parameters.userAgent,
        Parameters.clientId,
        Parameters.clientIp,
        Parameters.location
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Images
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var detailsOperationSpec = {
    httpMethod: "GET",
    path: "images/details",
    urlParameters: [
        Parameters.endpoint
    ],
    queryParameters: [
        Parameters.cropBottom,
        Parameters.cropLeft,
        Parameters.cropRight,
        Parameters.cropTop,
        Parameters.cropType,
        Parameters.countryCode,
        Parameters.id,
        Parameters.imageUrl,
        Parameters.insightsToken,
        Parameters.modules,
        Parameters.market,
        Parameters.query,
        Parameters.safeSearch,
        Parameters.setLang
    ],
    headerParameters: [
        Parameters.xBingApisSDK,
        Parameters.acceptLanguage,
        Parameters.contentType,
        Parameters.userAgent,
        Parameters.clientId,
        Parameters.clientIp,
        Parameters.location
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ImageInsights
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var trendingOperationSpec = {
    httpMethod: "GET",
    path: "images/trending",
    urlParameters: [
        Parameters.endpoint
    ],
    queryParameters: [
        Parameters.countryCode,
        Parameters.market,
        Parameters.safeSearch,
        Parameters.setLang
    ],
    headerParameters: [
        Parameters.xBingApisSDK,
        Parameters.acceptLanguage,
        Parameters.userAgent,
        Parameters.clientId,
        Parameters.clientIp,
        Parameters.location
    ],
    responses: {
        200: {
            bodyMapper: Mappers.TrendingImages
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=imagesOperations.js.map