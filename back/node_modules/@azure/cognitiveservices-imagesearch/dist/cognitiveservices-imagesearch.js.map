{"version":3,"file":"cognitiveservices-imagesearch.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/imagesOperationsMappers.ts","../src/models/parameters.ts","../src/operations/imagesOperations.ts","../src/imageSearchClientContext.ts","../src/imageSearchClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ServiceClientOptions } from \"@azure/ms-rest-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\n/**\n * Contains the possible cases for ResponseBase.\n */\nexport type ResponseBaseUnion = ResponseBase | IdentifiableUnion;\n\n/**\n * Response base\n */\nexport interface ResponseBase {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ResponseBase\";\n}\n\n/**\n * Contains the possible cases for Identifiable.\n */\nexport type IdentifiableUnion = Identifiable | ResponseUnion;\n\n/**\n * Defines the identity of a resource.\n */\nexport interface Identifiable {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Identifiable\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * Contains the possible cases for Response.\n */\nexport type ResponseUnion = Response | AnswerUnion | ThingUnion | ErrorResponse | RecognizedEntity | RecognizedEntityRegion | ImageInsights | TrendingImages;\n\n/**\n * Defines a response. All schemas that could be returned at the root of a response should inherit\n * from this\n */\nexport interface Response {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Response\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n}\n\n/**\n * Contains the possible cases for Thing.\n */\nexport type ThingUnion = Thing | Organization | OfferUnion | CreativeWorkUnion | Person | IntangibleUnion;\n\n/**\n * Defines a thing.\n */\nexport interface Thing {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Thing\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n}\n\n/**\n * Defines an organization.\n */\nexport interface Organization {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Organization\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n}\n\n/**\n * Contains the possible cases for PropertiesItem.\n */\nexport type PropertiesItemUnion = PropertiesItem | RatingUnion;\n\n/**\n * Defines an item.\n */\nexport interface PropertiesItem {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Properties/Item\";\n  /**\n   * Text representation of an item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n}\n\n/**\n * Contains the possible cases for Rating.\n */\nexport type RatingUnion = Rating | AggregateRating;\n\n/**\n * Defines a rating.\n */\nexport interface Rating {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Rating\";\n  /**\n   * Text representation of an item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The mean (average) rating. The possible values are 1.0 through 5.0.\n   */\n  ratingValue: number;\n  /**\n   * The highest rated review. The possible values are 1.0 through 5.0.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bestRating?: number;\n}\n\n/**\n * Defines the metrics that indicate how well an item was rated by others.\n */\nexport interface AggregateRating {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"AggregateRating\";\n  /**\n   * Text representation of an item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The mean (average) rating. The possible values are 1.0 through 5.0.\n   */\n  ratingValue: number;\n  /**\n   * The highest rated review. The possible values are 1.0 through 5.0.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bestRating?: number;\n  /**\n   * The number of times the recipe has been rated or reviewed.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly reviewCount?: number;\n}\n\n/**\n * Contains the possible cases for Offer.\n */\nexport type OfferUnion = Offer | AggregateOffer;\n\n/**\n * Defines a merchant's offer.\n */\nexport interface Offer {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Offer\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * Seller for this offer\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly seller?: Organization;\n  /**\n   * The item's price.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly price?: number;\n  /**\n   * The monetary currency. For example, USD. Possible values include: 'USD', 'CAD', 'GBP', 'EUR',\n   * 'COP', 'JPY', 'CNY', 'AUD', 'INR', 'AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AWG',\n   * 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD',\n   * 'BTN', 'BWP', 'BYR', 'BZD', 'CDF', 'CHE', 'CHF', 'CHW', 'CLF', 'CLP', 'COU', 'CRC', 'CUC',\n   * 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'FJD', 'FKP', 'GEL',\n   * 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS',\n   * 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD',\n   * 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT',\n   * 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK',\n   * 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD',\n   * 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP',\n   * 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH',\n   * 'UGX', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR',\n   * 'ZMW'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**.\n   * Default value: 'USD'.\n   */\n  readonly priceCurrency?: Currency;\n  /**\n   * The item's availability. The following are the possible values: Discontinued, InStock,\n   * InStoreOnly, LimitedAvailability, OnlineOnly, OutOfStock, PreOrder, SoldOut. Possible values\n   * include: 'Discontinued', 'InStock', 'InStoreOnly', 'LimitedAvailability', 'OnlineOnly',\n   * 'OutOfStock', 'PreOrder', 'SoldOut'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly availability?: ItemAvailability;\n  /**\n   * An aggregated rating that indicates how well the product has been rated by others.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly aggregateRating?: AggregateRating;\n  /**\n   * The last date that the offer was updated. The date is in the form YYYY-MM-DD.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lastUpdated?: string;\n}\n\n/**\n * Defines a list of offers from merchants that are related to the image.\n */\nexport interface AggregateOffer {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"AggregateOffer\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * Seller for this offer\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly seller?: Organization;\n  /**\n   * The item's price.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly price?: number;\n  /**\n   * The monetary currency. For example, USD. Possible values include: 'USD', 'CAD', 'GBP', 'EUR',\n   * 'COP', 'JPY', 'CNY', 'AUD', 'INR', 'AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AWG',\n   * 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD',\n   * 'BTN', 'BWP', 'BYR', 'BZD', 'CDF', 'CHE', 'CHF', 'CHW', 'CLF', 'CLP', 'COU', 'CRC', 'CUC',\n   * 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'FJD', 'FKP', 'GEL',\n   * 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS',\n   * 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD',\n   * 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT',\n   * 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK',\n   * 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD',\n   * 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP',\n   * 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH',\n   * 'UGX', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR',\n   * 'ZMW'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**.\n   * Default value: 'USD'.\n   */\n  readonly priceCurrency?: Currency;\n  /**\n   * The item's availability. The following are the possible values: Discontinued, InStock,\n   * InStoreOnly, LimitedAvailability, OnlineOnly, OutOfStock, PreOrder, SoldOut. Possible values\n   * include: 'Discontinued', 'InStock', 'InStoreOnly', 'LimitedAvailability', 'OnlineOnly',\n   * 'OutOfStock', 'PreOrder', 'SoldOut'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly availability?: ItemAvailability;\n  /**\n   * An aggregated rating that indicates how well the product has been rated by others.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly aggregateRating?: AggregateRating;\n  /**\n   * The last date that the offer was updated. The date is in the form YYYY-MM-DD.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lastUpdated?: string;\n  /**\n   * A list of offers from merchants that have offerings related to the image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly offers?: OfferUnion[];\n}\n\n/**\n * Defines a count of the number of websites where you can shop or perform other actions related to\n * the image.\n */\nexport interface ImagesImageMetadata {\n  /**\n   * The number of websites that offer goods of the products seen in the image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly shoppingSourcesCount?: number;\n  /**\n   * The number of websites that offer recipes of the food seen in the image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly recipeSourcesCount?: number;\n  /**\n   * A summary of the online offers of products found in the image. For example, if the image is of\n   * a dress, the offer might identify the lowest price and the number of offers found. Only\n   * visually similar products insights include this field. The offer includes the following\n   * fields: Name, AggregateRating, OfferCount, and LowPrice.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly aggregateOffer?: AggregateOffer;\n}\n\n/**\n * Contains the possible cases for CreativeWork.\n */\nexport type CreativeWorkUnion = CreativeWork | MediaObjectUnion | Recipe | WebPageUnion;\n\n/**\n * The most generic kind of creative work, including books, movies, photographs, software programs,\n * etc.\n */\nexport interface CreativeWork {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"CreativeWork\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n}\n\n/**\n * Contains the possible cases for MediaObject.\n */\nexport type MediaObjectUnion = MediaObject | ImageObject;\n\n/**\n * Defines a media object.\n */\nexport interface MediaObject {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"MediaObject\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the\n   * image).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentUrl?: string;\n  /**\n   * URL of the page that hosts the media object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hostPageUrl?: string;\n  /**\n   * Size of the media object content (use format \"value unit\" e.g \"1024 B\").\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentSize?: string;\n  /**\n   * Encoding format (e.g mp3, mp4, jpeg, etc).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly encodingFormat?: string;\n  /**\n   * Display URL of the page that hosts the media object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hostPageDisplayUrl?: string;\n  /**\n   * The width of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly width?: number;\n  /**\n   * The height of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly height?: number;\n}\n\n/**\n * Defines an image\n */\nexport interface ImageObject {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageObject\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the\n   * image).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentUrl?: string;\n  /**\n   * URL of the page that hosts the media object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hostPageUrl?: string;\n  /**\n   * Size of the media object content (use format \"value unit\" e.g \"1024 B\").\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentSize?: string;\n  /**\n   * Encoding format (e.g mp3, mp4, jpeg, etc).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly encodingFormat?: string;\n  /**\n   * Display URL of the page that hosts the media object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hostPageDisplayUrl?: string;\n  /**\n   * The width of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly width?: number;\n  /**\n   * The height of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly height?: number;\n  /**\n   * The URL to a thumbnail of the image\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnail?: ImageObject;\n  /**\n   * The token that you use in a subsequent call to the Image Search API to get additional\n   * information about the image. For information about using this token, see the insightsToken\n   * query parameter.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly imageInsightsToken?: string;\n  /**\n   * A count of the number of websites where you can shop or perform other actions related to the\n   * image. For example, if the image is of an apple pie, this object includes a count of the\n   * number of websites where you can buy an apple pie. To indicate the number of offers in your\n   * UX, include badging such as a shopping cart icon that contains the count. When the user clicks\n   * on the icon, use imageInsightsToken to get the list of websites.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly insightsMetadata?: ImagesImageMetadata;\n  /**\n   * Unique Id for the image\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly imageId?: string;\n  /**\n   * A three-byte hexadecimal number that represents the color that dominates the image. Use the\n   * color as the temporary background in your client until the image is loaded.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly accentColor?: string;\n  /**\n   * Visual representation of the image. Used for getting more sizes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly visualWords?: string;\n}\n\n/**\n * Defines a search query.\n */\nexport interface Query {\n  /**\n   * The query string. Use this string as the query term in a new search request.\n   */\n  text: string;\n  /**\n   * The display version of the query term. This version of the query term may contain special\n   * characters that highlight the search term found in the query string. The string contains the\n   * highlighting characters only if the query enabled hit highlighting\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayText?: string;\n  /**\n   * The URL that takes the user to the Bing search results page for the query.Only related search\n   * results include this field.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The URL that you use to get the results of the related search. Before using the URL, you must\n   * append query parameters as appropriate and include the Ocp-Apim-Subscription-Key header. Use\n   * this URL if you're displaying the results in your own user interface. Otherwise, use the\n   * webSearchUrl URL.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly searchLink?: string;\n  /**\n   * The URL to a thumbnail of a related image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnail?: ImageObject;\n}\n\n/**\n * Defines the pivot segment.\n */\nexport interface PivotSuggestions {\n  /**\n   * The segment from the original query to pivot on.\n   */\n  pivot: string;\n  /**\n   * A list of suggested queries for the pivot.\n   */\n  suggestions: Query[];\n}\n\n/**\n * Contains the possible cases for Answer.\n */\nexport type AnswerUnion = Answer | SearchResultsAnswerUnion;\n\n/**\n * Defines an answer.\n */\nexport interface Answer {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Answer\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n}\n\n/**\n * Contains the possible cases for SearchResultsAnswer.\n */\nexport type SearchResultsAnswerUnion = SearchResultsAnswer | Images;\n\n/**\n * Defines a search result answer.\n */\nexport interface SearchResultsAnswer {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"SearchResultsAnswer\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The estimated number of webpages that are relevant to the query. Use this number along with\n   * the count and offset query parameters to page the results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalEstimatedMatches?: number;\n}\n\n/**\n * Defines an image answer\n */\nexport interface Images {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Images\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The estimated number of webpages that are relevant to the query. Use this number along with\n   * the count and offset query parameters to page the results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalEstimatedMatches?: number;\n  /**\n   * Used as part of deduping. Tells client the next offset that client should use in the next\n   * pagination request\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextOffset?: number;\n  /**\n   * A list of image objects that are relevant to the query. If there are no results, the List is\n   * empty.\n   */\n  value: ImageObject[];\n  /**\n   * A list of expanded queries that narrows the original query. For example, if the query was\n   * Microsoft Surface, the expanded queries might be: Microsoft Surface Pro 3, Microsoft Surface\n   * RT, Microsoft Surface Phone, and Microsoft Surface Hub.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryExpansions?: Query[];\n  /**\n   * A list of segments in the original query. For example, if the query was Red Flowers, Bing\n   * might segment the query into Red and Flowers. The Flowers pivot may contain query suggestions\n   * such as Red Peonies and Red Daisies, and the Red pivot may contain query suggestions such as\n   * Green Flowers and Yellow Flowers.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly pivotSuggestions?: PivotSuggestions[];\n  /**\n   * A list of terms that are similar in meaning to the user's query term.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly similarTerms?: Query[];\n}\n\n/**\n * Defines the error that occurred.\n */\nexport interface ErrorModel {\n  /**\n   * The error code that identifies the category of error. Possible values include: 'None',\n   * 'ServerError', 'InvalidRequest', 'RateLimitExceeded', 'InvalidAuthorization',\n   * 'InsufficientAuthorization'. Default value: 'None'.\n   */\n  code: ErrorCode;\n  /**\n   * The error code that further helps to identify the error. Possible values include:\n   * 'UnexpectedError', 'ResourceError', 'NotImplemented', 'ParameterMissing',\n   * 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',\n   * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly subCode?: ErrorSubCode;\n  /**\n   * A description of the error.\n   */\n  message: string;\n  /**\n   * A description that provides additional information about the error.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly moreDetails?: string;\n  /**\n   * The parameter in the request that caused the error.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly parameter?: string;\n  /**\n   * The parameter's value in the request that was not valid.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: string;\n}\n\n/**\n * The top-level response that represents a failed request.\n */\nexport interface ErrorResponse {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ErrorResponse\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * A list of errors that describe the reasons why the request failed.\n   */\n  errors: ErrorModel[];\n}\n\n/**\n * Defines an image's caption.\n */\nexport interface ImageInsightsImageCaption {\n  /**\n   * A caption about the image.\n   */\n  caption: string;\n  /**\n   * The URL to the website where the caption was found. You must attribute the caption to the\n   * source. For example, by displaying the domain name from the URL next to the caption and using\n   * the URL to link to the source website.\n   */\n  dataSourceUrl: string;\n  /**\n   * A list of entities found in the caption. Use the contents of the Query object to find the\n   * entity in the caption and create a link. The link takes the user to images of the entity.\n   */\n  relatedSearches: Query[];\n}\n\n/**\n * Contains the possible cases for WebPage.\n */\nexport type WebPageUnion = WebPage | CollectionPageUnion;\n\n/**\n * Defines a webpage that is relevant to the query.\n */\nexport interface WebPage {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"WebPage\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n}\n\n/**\n * Contains the possible cases for CollectionPage.\n */\nexport type CollectionPageUnion = CollectionPage | ImageGallery;\n\n/**\n * Defines a link to a webpage that contains a collection.\n */\nexport interface CollectionPage {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"CollectionPage\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n}\n\n/**\n * Defines a link to a webpage that contains a collection of related images.\n */\nexport interface ImageGallery {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageGallery\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The publisher or social network where the images were found. You must attribute the publisher\n   * as the source where the collection was found.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly source?: string;\n  /**\n   * The number of related images found in the collection.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly imagesCount?: number;\n  /**\n   * The number of users on the social network that follow the creator.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followersCount?: number;\n}\n\n/**\n * Defines a list of webpages that contain related images.\n */\nexport interface RelatedCollectionsModule {\n  /**\n   * A list of webpages that contain related images.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: ImageGallery[];\n}\n\n/**\n * Defines a list of images.\n */\nexport interface ImagesModule {\n  /**\n   * A list of images.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: ImageObject[];\n}\n\n/**\n * Defines a list of related searches.\n */\nexport interface RelatedSearchesModule {\n  /**\n   * A list of related searches.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: Query[];\n}\n\n/**\n * Defines a cooking recipe.\n */\nexport interface Recipe {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Recipe\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The amount of time the food takes to cook. For example, PT25M. For information about the time\n   * format, see http://en.wikipedia.org/wiki/ISO_8601#Durations.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cookTime?: string;\n  /**\n   * The amount of time required to prepare the ingredients. For example, PT15M. For information\n   * about the time format, see http://en.wikipedia.org/wiki/ISO_8601#Durations.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly prepTime?: string;\n  /**\n   * The total amount of time it takes to prepare and cook the recipe. For example, PT45M. For\n   * information about the time format, see http://en.wikipedia.org/wiki/ISO_8601#Durations.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalTime?: string;\n}\n\n/**\n * Defines a list of recipes.\n */\nexport interface RecipesModule {\n  /**\n   * A list of recipes.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: Recipe[];\n}\n\n/**\n * Contains the possible cases for Intangible.\n */\nexport type IntangibleUnion = Intangible | StructuredValueUnion;\n\n/**\n * A utility class that serves as the umbrella for a number of 'intangible' things such as\n * quantities, structured values, etc.\n */\nexport interface Intangible {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Intangible\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n}\n\n/**\n * Contains the possible cases for StructuredValue.\n */\nexport type StructuredValueUnion = StructuredValue | NormalizedRectangle;\n\n/**\n * An interface representing StructuredValue.\n */\nexport interface StructuredValue {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"StructuredValue\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n}\n\n/**\n * Defines a region of an image. The region is defined by the coordinates of the top, left corner\n * and bottom, right corner of the region. The coordinates are fractional values of the original\n * image's width and height in the range 0.0 through 1.0.\n */\nexport interface NormalizedRectangle {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"NormalizedRectangle\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The left coordinate.\n   */\n  left: number;\n  /**\n   * The top coordinate\n   */\n  top: number;\n  /**\n   * The right coordinate\n   */\n  right: number;\n  /**\n   * The bottom coordinate\n   */\n  bottom: number;\n}\n\n/**\n * Defines a recognized entity.\n */\nexport interface RecognizedEntity {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"RecognizedEntity\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The entity that was recognized. The following are the possible entity objects: Person\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly entity?: ThingUnion;\n  /**\n   * The confidence that Bing has that the entity in the image matches this entity. The confidence\n   * ranges from 0.0 through 1.0 with 1.0 being very confident.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly matchConfidence?: number;\n}\n\n/**\n * Defines a region of the image where an entity was found and a list of entities that might match\n * it.\n */\nexport interface RecognizedEntityRegion {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"RecognizedEntityRegion\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * A region of the image that contains an entity. The values of the rectangle are relative to the\n   * width and height of the original image and are in the range 0.0 through 1.0. For example, if\n   * the image is 300x200 and the region's top, left corner is at point (10, 20) and the bottom,\n   * right corner is at point (290, 150), then the normalized rectangle is: Left =\n   * 0.0333333333333333, Top = 0.1, Right = 0.9666666666666667, Bottom = 0.75. For people, the\n   * region represents the person's face.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly region?: NormalizedRectangle;\n  /**\n   * A list of entities that Bing believes match the entity found in the region. The entities are\n   * in descending order of confidence (see the matchConfidence field of RecognizedEntity).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly matchingEntities?: RecognizedEntity[];\n}\n\n/**\n * Defines a group of previously recognized entities.\n */\nexport interface RecognizedEntityGroup {\n  /**\n   * The regions of the image that contain entities.\n   */\n  recognizedEntityRegions: RecognizedEntityRegion[];\n  /**\n   * The name of the group where images of the entity were also found. The following are possible\n   * groups. CelebRecognitionAnnotations: Similar to CelebrityAnnotations but provides a higher\n   * probability of an accurate match. CelebrityAnnotations: Contains celebrities such as actors,\n   * politicians, athletes, and historical figures.\n   */\n  name: string;\n}\n\n/**\n * Defines a list of previously recognized entities.\n */\nexport interface RecognizedEntitiesModule {\n  /**\n   * A list of recognized entities.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: RecognizedEntityGroup[];\n}\n\n/**\n * Defines a characteristic of the content found in the image.\n */\nexport interface InsightsTag {\n  /**\n   * The name of the characteristic. For example, cat, kitty, calico cat.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n}\n\n/**\n * Defines the characteristics of content found in an image.\n */\nexport interface ImageTagsModule {\n  /**\n   * A list of tags that describe the characteristics of the content found in the image. For\n   * example, if the image is of a musical artist, the list might include Female, Dress, and Music\n   * to indicate the person is female music artist that's wearing a dress.\n   */\n  value: InsightsTag[];\n}\n\n/**\n * The top-level object that the response includes when an image insights request succeeds. For\n * information about requesting image insights, see the\n * [insightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken)\n * query parameter. The modules query parameter affects the fields that Bing includes in the\n * response. If you set\n * [modules](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#modulesrequested)\n * to only Caption, then this object includes only the imageCaption field.\n */\nexport interface ImageInsights {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageInsights\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * A token that you use in a subsequent call to the Image Search API to get more information\n   * about the image. For information about using this token, see the insightsToken query\n   * parameter. This token has the same usage as the token in the Image object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly imageInsightsToken?: string;\n  /**\n   * The query term that best represents the image. Clicking the link in the Query object, takes\n   * the user to a webpage with more pictures of the image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bestRepresentativeQuery?: Query;\n  /**\n   * The caption to use for the image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly imageCaption?: ImageInsightsImageCaption;\n  /**\n   * A list of links to webpages that contain related images.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly relatedCollections?: RelatedCollectionsModule;\n  /**\n   * A list of webpages that contain the image. To access the webpage, use the URL in the image's\n   * hostPageUrl field.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly pagesIncluding?: ImagesModule;\n  /**\n   * A list of merchants that offer items related to the image. For example, if the image is of an\n   * apple pie, the list contains merchants that are selling apple pies.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly shoppingSources?: AggregateOffer;\n  /**\n   * A list of related queries made by others.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly relatedSearches?: RelatedSearchesModule;\n  /**\n   * A list of recipes related to the image. For example, if the image is of an apple pie, the list\n   * contains recipes for making an apple pie.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly recipes?: RecipesModule;\n  /**\n   * A list of images that are visually similar to the original image. For example, if the\n   * specified image is of a sunset over a body of water, the list of similar images are of a\n   * sunset over a body of water. If the specified image is of a person, similar images might be of\n   * the same person or they might be of persons dressed similarly or in a similar setting. The\n   * criteria for similarity continues to evolve.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly visuallySimilarImages?: ImagesModule;\n  /**\n   * A list of images that contain products that are visually similar to products found in the\n   * original image. For example, if the specified image contains a dress, the list of similar\n   * images contain a dress. The image provides summary information about offers that Bing found\n   * online for the product.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly visuallySimilarProducts?: ImagesModule;\n  /**\n   * A list of groups that contain images of entities that match the entity found in the specified\n   * image. For example, the response might include images from the general celebrity group if the\n   * entity was recognized in that group.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly recognizedEntityGroups?: RecognizedEntitiesModule;\n  /**\n   * A list of characteristics of the content found in the image. For example, if the image is of a\n   * person, the tags might indicate the person's gender and the type of clothes they're wearing.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly imageTags?: ImageTagsModule;\n}\n\n/**\n * Defines an image tile.\n */\nexport interface TrendingImagesTile {\n  /**\n   * A query that returns a Bing search results page with more images of the subject. For example,\n   * if the category is Popular People Searches, then the thumbnail is of a popular person. The\n   * query would return a Bing search results page with more images of that person.\n   */\n  query: Query;\n  /**\n   * The image's thumbnail.\n   */\n  image: ImageObject;\n}\n\n/**\n * Defines the category of trending images.\n */\nexport interface TrendingImagesCategory {\n  /**\n   * The name of the image category. For example, Popular People Searches.\n   */\n  title: string;\n  /**\n   * A list of images that are trending in the category. Each tile contains an image and a URL that\n   * returns more images of the subject. For example, if the category is Popular People Searches,\n   * the image is of a popular person and the URL would return more images of that person.\n   */\n  tiles: TrendingImagesTile[];\n}\n\n/**\n * The top-level object that the response includes when a trending images request succeeds.\n */\nexport interface TrendingImages {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"TrendingImages\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * A list that identifies categories of images and a list of trending images in that category.\n   */\n  categories: TrendingImagesCategory[];\n}\n\n/**\n * Defines a person.\n */\nexport interface Person {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Person\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The person's job title.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly jobTitle?: string;\n  /**\n   * The URL of the person's twitter profile.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly twitterProfile?: string;\n}\n\n/**\n * An interface representing ImageSearchClientOptions.\n */\nexport interface ImageSearchClientOptions extends ServiceClientOptions {\n  /**\n   * Supported Cognitive Services endpoints (protocol and hostname, for example:\n   * \"https://westus.api.cognitive.microsoft.com\", \"https://api.cognitive.microsoft.com\"). Default\n   * value: 'https://api.cognitive.microsoft.com'.\n   */\n  endpoint?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImagesSearchOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * A comma-delimited list of one or more languages to use for user interface strings. The list is\n   * in decreasing order of preference. For additional information, including expected format, see\n   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#setlang)\n   * query parameter are mutually exclusive; do not specify both. If you set this header, you must\n   * also specify the\n   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#cc)\n   * query parameter. To determine the market to return results for, Bing uses the first supported\n   * language it finds from the list and combines it with the cc parameter value. If the list does\n   * not include a supported language, Bing finds the closest language and market that supports the\n   * request or it uses an aggregated or default market for the results. To determine the market\n   * that Bing used, see the BingAPIs-Market header. Use this header and the cc query parameter\n   * only if you specify multiple languages. Otherwise, use the\n   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#mkt)\n   * and\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#setlang)\n   * query parameters. A user interface string is a string that's used as a label in a user\n   * interface. There are few user interface strings in the JSON response objects. Any links to\n   * Bing.com properties in the response objects apply the specified language.\n   */\n  acceptLanguage?: string;\n  /**\n   * The user agent originating the request. Bing uses the user agent to provide mobile users with\n   * an optimized experience. Although optional, you are encouraged to always specify this header.\n   * The user-agent should be the same string that any commonly used browser sends. For information\n   * about user agents, see [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\n   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0 (compatible; MSIE\n   * 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android:\n   * Mozilla / 5.0 (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit /\n   * 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla / 5.0 (iPhone;\n   * CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142\n   * iPhone4; 1 BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident /\n   * 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X)\n   * AppleWebKit / 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\n   */\n  userAgent?: string;\n  /**\n   * Bing uses this header to provide users with consistent behavior across Bing API calls. Bing\n   * often flights new features and improvements, and it uses the client ID as a key for assigning\n   * traffic on different flights. If you do not use the same client ID for a user across multiple\n   * requests, then Bing may assign the user to multiple conflicting flights. Being assigned to\n   * multiple conflicting flights can lead to an inconsistent user experience. For example, if the\n   * second request has a different flight assignment than the first, the experience may be\n   * unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search\n   * history, providing a richer experience for the user. Bing also uses this header to help\n   * improve result rankings by analyzing the activity generated by a client ID. The relevance\n   * improvements help with better quality of results delivered by Bing APIs and in turn enables\n   * higher click-through rates for the API consumer. IMPORTANT: Although optional, you should\n   * consider this header required. Persisting the client ID across multiple requests for the same\n   * end user and device combination enables 1) the API consumer to receive a consistent user\n   * experience, and 2) higher click-through rates via better quality of results from the Bing\n   * APIs. Each user that uses your application on the device must have a unique, Bing generated\n   * client ID. If you do not include this header in the request, Bing generates an ID and returns\n   * it in the X-MSEdge-ClientID response header. The only time that you should NOT include this\n   * header in a request is the first time the user uses your app on that device. Use the client ID\n   * for each Bing API request that your app makes for this user on the device. Persist the client\n   * ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used\n   * across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the\n   * device's persistent storage to persist the ID. The next time the user uses your app on that\n   * device, get the client ID that you persisted. Bing responses may or may not include this\n   * header. If the response includes this header, capture the client ID and use it for all\n   * subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID,\n   * you must not include cookies in the request.\n   */\n  clientId?: string;\n  /**\n   * The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's\n   * location. Bing uses the location information to determine safe search behavior. Although\n   * optional, you are encouraged to always specify this header and the X-Search-Location header.\n   * Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the\n   * address results in the location not being anywhere near the device's actual location, which\n   * may result in Bing serving erroneous results.\n   */\n  clientIp?: string;\n  /**\n   * A semicolon-delimited list of key/value pairs that describe the client's geographical\n   * location. Bing uses the location information to determine safe search behavior and to return\n   * relevant local content. Specify the key/value pair as <key>:<value>. The following are the\n   * keys that you use to specify the user's location. lat (required): The latitude of the client's\n   * location, in degrees. The latitude must be greater than or equal to -90.0 and less than or\n   * equal to +90.0. Negative values indicate southern latitudes and positive values indicate\n   * northern latitudes. long (required): The longitude of the client's location, in degrees. The\n   * longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative\n   * values indicate western longitudes and positive values indicate eastern longitudes. re\n   * (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates.\n   * Pass the value returned by the device's location service. Typical values might be 22m for\n   * GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts\n   * (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp\n   * is the number of seconds since January 1, 1970.) head (optional): The client's relative\n   * heading or direction of travel. Specify the direction of travel as degrees from 0 through 360,\n   * counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp\n   * (optional): The horizontal velocity (speed), in meters per second, that the client device is\n   * traveling. alt (optional): The altitude of the client device, in meters. are (optional): The\n   * radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key\n   * only if you specify the alt key. Although many of the keys are optional, the more information\n   * that you provide, the more accurate the location results are. Although optional, you are\n   * encouraged to always specify the user's geographical location. Providing the location is\n   * especially important if the client's IP address does not accurately reflect the user's\n   * physical location (for example, if the client uses VPN). For optimal results, you should\n   * include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include\n   * this header.\n   */\n  location?: string;\n  /**\n   * Filter images by the following aspect ratios. All: Do not filter by aspect.Specifying this\n   * value is the same as not specifying the aspect parameter. Square: Return images with standard\n   * aspect ratio. Wide: Return images with wide screen aspect ratio. Tall: Return images with tall\n   * aspect ratio. Possible values include: 'All', 'Square', 'Wide', 'Tall'\n   */\n  aspect?: ImageAspect;\n  /**\n   * Filter images by the following color options. ColorOnly: Return color images. Monochrome:\n   * Return black and white images. Return images with one of the following dominant colors: Black,\n   * Blue, Brown, Gray, Green, Orange, Pink, Purple, Red, Teal, White, Yellow. Possible values\n   * include: 'ColorOnly', 'Monochrome', 'Black', 'Blue', 'Brown', 'Gray', 'Green', 'Orange',\n   * 'Pink', 'Purple', 'Red', 'Teal', 'White', 'Yellow'\n   */\n  color?: ImageColor;\n  /**\n   * A 2-character country code of the country where the results come from. For a list of possible\n   * values, see [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes).\n   * If you set this parameter, you must also specify the\n   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#acceptlanguage)\n   * header. Bing uses the first supported language it finds from the languages list, and combine\n   * that language with the country code that you specify to determine the market to return results\n   * for. If the languages list does not include a supported language, Bing finds the closest\n   * language and market that supports the request, or it may use an aggregated or default market\n   * for the results instead of a specified one. You should use this query parameter and the\n   * Accept-Language query parameter only if you specify multiple languages; otherwise, you should\n   * use the mkt and setLang query parameters. This parameter and the\n   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#mkt)\n   * query parameter are mutually exclusive—do not specify both.\n   */\n  countryCode?: string;\n  /**\n   * The number of images to return in the response. The actual number delivered may be less than\n   * requested. The default is 35. The maximum value is 150. You use this parameter along with the\n   * offset parameter to page results.For example, if your user interface displays 20 images per\n   * page, set count to 20 and offset to 0 to get the first page of results.For each subsequent\n   * page, increment offset by 20 (for example, 0, 20, 40). Use this parameter only with the Image\n   * Search API.Do not specify this parameter when calling the Insights, Trending Images, or Web\n   * Search APIs.\n   */\n  count?: number;\n  /**\n   * Filter images by the following discovery options. Day: Return images discovered by Bing within\n   * the last 24 hours. Week: Return images discovered by Bing within the last 7 days. Month:\n   * Return images discovered by Bing within the last 30 days. Possible values include: 'Day',\n   * 'Week', 'Month'\n   */\n  freshness?: Freshness;\n  /**\n   * Filter images that have the specified height, in pixels. You may use this filter with the size\n   * filter to return small images that have a height of 150 pixels.\n   */\n  height?: number;\n  /**\n   * An ID that uniquely identifies an image. Use this parameter to ensure that the specified image\n   * is the first image in the list of images that Bing returns. The\n   * [Image](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image)\n   * object's imageId field contains the ID that you set this parameter to.\n   */\n  id?: string;\n  /**\n   * Filter images by the following content types. Face: Return images that show only a person's\n   * face. Portrait: Return images that show only a person's head and shoulders. Possible values\n   * include: 'Face', 'Portrait'\n   */\n  imageContent?: ImageContent;\n  /**\n   * Filter images by the following image types. AnimatedGif: Return only animated GIFs. Clipart:\n   * Return only clip art images. Line: Return only line drawings. Photo: Return only\n   * photographs(excluding line drawings, animated Gifs, and clip art). Shopping: Return only\n   * images that contain items where Bing knows of a merchant that is selling the items. This\n   * option is valid in the en - US market only.Transparent: Return only images with a transparent\n   * background. Possible values include: 'AnimatedGif', 'Clipart', 'Line', 'Photo', 'Shopping',\n   * 'Transparent'\n   */\n  imageType?: ImageType;\n  /**\n   * Filter images by the following license types. All: Do not filter by license type.Specifying\n   * this value is the same as not specifying the license parameter. Any: Return images that are\n   * under any license type. The response doesn't include images that do not specify a license or\n   * the license is unknown. Public: Return images where the creator has waived their exclusive\n   * rights, to the fullest extent allowed by law. Share: Return images that may be shared with\n   * others. Changing or editing the image might not be allowed. Also, modifying, sharing, and\n   * using the image for commercial purposes might not be allowed. Typically, this option returns\n   * the most images. ShareCommercially: Return images that may be shared with others for personal\n   * or commercial purposes. Changing or editing the image might not be allowed. Modify: Return\n   * images that may be modified, shared, and used. Changing or editing the image might not be\n   * allowed. Modifying, sharing, and using the image for commercial purposes might not be allowed.\n   * ModifyCommercially: Return images that may be modified, shared, and used for personal or\n   * commercial purposes. Typically, this option returns the fewest images. For more information\n   * about these license types, see [Filter Images By License\n   * Type](http://go.microsoft.com/fwlink/?LinkId=309768). Possible values include: 'All', 'Any',\n   * 'Public', 'Share', 'ShareCommercially', 'Modify', 'ModifyCommercially'\n   */\n  license?: ImageLicense;\n  /**\n   * The market where the results come from. Typically, mkt is the country where the user is making\n   * the request from. However, it could be a different country if the user is not located in a\n   * country where Bing delivers results. The market must be in the form <language code>-<country\n   * code>. For example, en-US. The string is case insensitive. For a list of possible market\n   * values, see [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes).\n   * NOTE: If known, you are encouraged to always specify the market. Specifying the market helps\n   * Bing route the request and return an appropriate and optimal response. If you specify a market\n   * that is not listed in [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes),\n   * Bing uses a best fit market code based on an internal mapping that is subject to change. This\n   * parameter and the\n   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#cc)\n   * query parameter are mutually exclusive—do not specify both.\n   */\n  market?: string;\n  /**\n   * Filter images that are less than or equal to the specified file size. The maximum file size\n   * that you may specify is 520,192 bytes. If you specify a larger value, the API uses 520,192. It\n   * is possible that the response may include images that are slightly larger than the specified\n   * maximum. You may specify this filter and minFileSize to filter images within a range of file\n   * sizes.\n   */\n  maxFileSize?: number;\n  /**\n   * Filter images that have a height that is less than or equal to the specified height. Specify\n   * the height in pixels. You may specify this filter and minHeight to filter images within a\n   * range of heights. This filter and the height filter are mutually exclusive.\n   */\n  maxHeight?: number;\n  /**\n   * Filter images that have a width that is less than or equal to the specified width. Specify the\n   * width in pixels. You may specify this filter and maxWidth to filter images within a range of\n   * widths. This filter and the width filter are mutually exclusive.\n   */\n  maxWidth?: number;\n  /**\n   * Filter images that are greater than or equal to the specified file size. The maximum file size\n   * that you may specify is 520,192 bytes. If you specify a larger value, the API uses 520,192. It\n   * is possible that the response may include images that are slightly smaller than the specified\n   * minimum. You may specify this filter and maxFileSize to filter images within a range of file\n   * sizes.\n   */\n  minFileSize?: number;\n  /**\n   * Filter images that have a height that is greater than or equal to the specified height.\n   * Specify the height in pixels. You may specify this filter and maxHeight to filter images\n   * within a range of heights. This filter and the height filter are mutually exclusive.\n   */\n  minHeight?: number;\n  /**\n   * Filter images that have a width that is greater than or equal to the specified width. Specify\n   * the width in pixels. You may specify this filter and maxWidth to filter images within a range\n   * of widths. This filter and the width filter are mutually exclusive.\n   */\n  minWidth?: number;\n  /**\n   * The zero-based offset that indicates the number of images to skip before returning images. The\n   * default is 0. The offset should be less than\n   * ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#totalestimatedmatches)\n   * - count). Use this parameter along with the count parameter to page results. For example, if\n   * your user interface displays 20 images per page, set count to 20 and offset to 0 to get the\n   * first page of results. For each subsequent page, increment offset by 20 (for example, 0, 20,\n   * 40). It is possible for multiple pages to include some overlap in results. To prevent\n   * duplicates, see\n   * [nextOffset](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#nextoffset).\n   * Use this parameter only with the Image API. Do not specify this parameter when calling the\n   * Trending Images API or the Web Search API.\n   */\n  offset?: number;\n  /**\n   * Filter images for adult content. The following are the possible filter values. Off: May return\n   * images with adult content. If the request is through the Image Search API, the response\n   * includes thumbnail images that are clear (non-fuzzy). However, if the request is through the\n   * Web Search API, the response includes thumbnail images that are pixelated (fuzzy). Moderate:\n   * If the request is through the Image Search API, the response doesn't include images with adult\n   * content. If the request is through the Web Search API, the response may include images with\n   * adult content (the thumbnail images are pixelated (fuzzy)). Strict: Do not return images with\n   * adult content. The default is Moderate. If the request comes from a market that Bing's adult\n   * policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses\n   * Strict. If you use the site: query operator, there is the chance that the response may contain\n   * adult content regardless of what the safeSearch query parameter is set to. Use site: only if\n   * you are aware of the content on the site and your scenario supports the possibility of adult\n   * content. Possible values include: 'Off', 'Moderate', 'Strict'\n   */\n  safeSearch?: SafeSearch;\n  /**\n   * Filter images by the following sizes. All: Do not filter by size. Specifying this value is the\n   * same as not specifying the size parameter. Small: Return images that are less than 200x200\n   * pixels. Medium: Return images that are greater than or equal to 200x200 pixels but less than\n   * 500x500 pixels. Large: Return images that are 500x500 pixels or larger. Wallpaper: Return\n   * wallpaper images. You may use this parameter along with the height or width parameters. For\n   * example, you may use height and size to request small images that are 150 pixels tall.\n   * Possible values include: 'All', 'Small', 'Medium', 'Large', 'Wallpaper'\n   */\n  size?: ImageSize;\n  /**\n   * The language to use for user interface strings. Specify the language using the ISO 639-1\n   * 2-letter language code. For example, the language code for English is EN. The default is EN\n   * (English). Although optional, you should always specify the language. Typically, you set\n   * setLang to the same language specified by mkt unless the user wants the user interface strings\n   * displayed in a different language. This parameter and the\n   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#acceptlanguage)\n   * header are mutually exclusive; do not specify both. A user interface string is a string that's\n   * used as a label in a user interface. There are few user interface strings in the JSON response\n   * objects. Also, any links to Bing.com properties in the response objects apply the specified\n   * language.\n   */\n  setLang?: string;\n  /**\n   * Filter images that have the specified width, in pixels. You may use this filter with the size\n   * filter to return small images that have a width of 150 pixels.\n   */\n  width?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImagesDetailsOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * A comma-delimited list of one or more languages to use for user interface strings. The list is\n   * in decreasing order of preference. For additional information, including expected format, see\n   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#setlang)\n   * query parameter are mutually exclusive; do not specify both. If you set this header, you must\n   * also specify the\n   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#cc)\n   * query parameter. To determine the market to return results for, Bing uses the first supported\n   * language it finds from the list and combines it with the cc parameter value. If the list does\n   * not include a supported language, Bing finds the closest language and market that supports the\n   * request or it uses an aggregated or default market for the results. To determine the market\n   * that Bing used, see the BingAPIs-Market header. Use this header and the cc query parameter\n   * only if you specify multiple languages. Otherwise, use the\n   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#mkt)\n   * and\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#setlang)\n   * query parameters. A user interface string is a string that's used as a label in a user\n   * interface. There are few user interface strings in the JSON response objects. Any links to\n   * Bing.com properties in the response objects apply the specified language.\n   */\n  acceptLanguage?: string;\n  /**\n   * Optional request header. If you set the\n   * [modules](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#modulesrequested)\n   * query parameter to RecognizedEntities, you may specify the binary of an image in the body of a\n   * POST request. If you specify the image in the body of a POST request, you must specify this\n   * header and set its value to multipart/form-data. The maximum image size is 1 MB.\n   */\n  contentType?: string;\n  /**\n   * The user agent originating the request. Bing uses the user agent to provide mobile users with\n   * an optimized experience. Although optional, you are encouraged to always specify this header.\n   * The user-agent should be the same string that any commonly used browser sends. For information\n   * about user agents, see [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\n   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0 (compatible; MSIE\n   * 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android:\n   * Mozilla / 5.0 (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit /\n   * 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla / 5.0 (iPhone;\n   * CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142\n   * iPhone4; 1 BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident /\n   * 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X)\n   * AppleWebKit / 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\n   */\n  userAgent?: string;\n  /**\n   * Bing uses this header to provide users with consistent behavior across Bing API calls. Bing\n   * often flights new features and improvements, and it uses the client ID as a key for assigning\n   * traffic on different flights. If you do not use the same client ID for a user across multiple\n   * requests, then Bing may assign the user to multiple conflicting flights. Being assigned to\n   * multiple conflicting flights can lead to an inconsistent user experience. For example, if the\n   * second request has a different flight assignment than the first, the experience may be\n   * unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search\n   * history, providing a richer experience for the user. Bing also uses this header to help\n   * improve result rankings by analyzing the activity generated by a client ID. The relevance\n   * improvements help with better quality of results delivered by Bing APIs and in turn enables\n   * higher click-through rates for the API consumer. IMPORTANT: Although optional, you should\n   * consider this header required. Persisting the client ID across multiple requests for the same\n   * end user and device combination enables 1) the API consumer to receive a consistent user\n   * experience, and 2) higher click-through rates via better quality of results from the Bing\n   * APIs. Each user that uses your application on the device must have a unique, Bing generated\n   * client ID. If you do not include this header in the request, Bing generates an ID and returns\n   * it in the X-MSEdge-ClientID response header. The only time that you should NOT include this\n   * header in a request is the first time the user uses your app on that device. Use the client ID\n   * for each Bing API request that your app makes for this user on the device. Persist the client\n   * ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used\n   * across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the\n   * device's persistent storage to persist the ID. The next time the user uses your app on that\n   * device, get the client ID that you persisted. Bing responses may or may not include this\n   * header. If the response includes this header, capture the client ID and use it for all\n   * subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID,\n   * you must not include cookies in the request.\n   */\n  clientId?: string;\n  /**\n   * The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's\n   * location. Bing uses the location information to determine safe search behavior. Although\n   * optional, you are encouraged to always specify this header and the X-Search-Location header.\n   * Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the\n   * address results in the location not being anywhere near the device's actual location, which\n   * may result in Bing serving erroneous results.\n   */\n  clientIp?: string;\n  /**\n   * A semicolon-delimited list of key/value pairs that describe the client's geographical\n   * location. Bing uses the location information to determine safe search behavior and to return\n   * relevant local content. Specify the key/value pair as <key>:<value>. The following are the\n   * keys that you use to specify the user's location. lat (required): The latitude of the client's\n   * location, in degrees. The latitude must be greater than or equal to -90.0 and less than or\n   * equal to +90.0. Negative values indicate southern latitudes and positive values indicate\n   * northern latitudes. long (required): The longitude of the client's location, in degrees. The\n   * longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative\n   * values indicate western longitudes and positive values indicate eastern longitudes. re\n   * (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates.\n   * Pass the value returned by the device's location service. Typical values might be 22m for\n   * GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts\n   * (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp\n   * is the number of seconds since January 1, 1970.) head (optional): The client's relative\n   * heading or direction of travel. Specify the direction of travel as degrees from 0 through 360,\n   * counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp\n   * (optional): The horizontal velocity (speed), in meters per second, that the client device is\n   * traveling. alt (optional): The altitude of the client device, in meters. are (optional): The\n   * radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key\n   * only if you specify the alt key. Although many of the keys are optional, the more information\n   * that you provide, the more accurate the location results are. Although optional, you are\n   * encouraged to always specify the user's geographical location. Providing the location is\n   * especially important if the client's IP address does not accurately reflect the user's\n   * physical location (for example, if the client uses VPN). For optimal results, you should\n   * include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include\n   * this header.\n   */\n  location?: string;\n  /**\n   * The bottom coordinate of the region to crop. The coordinate is a fractional value of the\n   * original image's height and is measured from the top, left corner of the image. Specify the\n   * coordinate as a value from 0.0 through 1.0. Use this parameter only with the Insights API. Do\n   * not specify this parameter when calling the Images, Trending Images, or Web Search APIs.\n   */\n  cropBottom?: number;\n  /**\n   * The left coordinate of the region to crop. The coordinate is a fractional value of the\n   * original image's height and is measured from the top, left corner of the image. Specify the\n   * coordinate as a value from 0.0 through 1.0. Use this parameter only with the Insights API. Do\n   * not specify this parameter when calling the Images, Trending Images, or Web Search APIs.\n   */\n  cropLeft?: number;\n  /**\n   * The right coordinate of the region to crop. The coordinate is a fractional value of the\n   * original image's height and is measured from the top, left corner of the image. Specify the\n   * coordinate as a value from 0.0 through 1.0. Use this parameter only with the Insights API. Do\n   * not specify this parameter when calling the Images, Trending Images, or Web Search APIs.\n   */\n  cropRight?: number;\n  /**\n   * The top coordinate of the region to crop. The coordinate is a fractional value of the original\n   * image's height and is measured from the top, left corner of the image. Specify the coordinate\n   * as a value from 0.0 through 1.0. Use this parameter only with the Insights API. Do not specify\n   * this parameter when calling the Images, Trending Images, or Web Search APIs.\n   */\n  cropTop?: number;\n  /**\n   * The crop type to use when cropping the image based on the coordinates specified in the cal,\n   * cat, car, and cab parameters. The following are the possible values. 0: Rectangular (default).\n   * Use this parameter only with the Insights API. Do not specify this parameter when calling the\n   * Images, Trending Images, or Web Search APIs. Possible values include: 'Rectangular'\n   */\n  cropType?: ImageCropType;\n  /**\n   * A 2-character country code of the country where the results come from. For a list of possible\n   * values, see [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes).\n   * If you set this parameter, you must also specify the\n   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#acceptlanguage)\n   * header. Bing uses the first supported language it finds from the languages list, and combine\n   * that language with the country code that you specify to determine the market to return results\n   * for. If the languages list does not include a supported language, Bing finds the closest\n   * language and market that supports the request, or it may use an aggregated or default market\n   * for the results instead of a specified one. You should use this query parameter and the\n   * Accept-Language query parameter only if you specify multiple languages; otherwise, you should\n   * use the mkt and setLang query parameters. This parameter and the\n   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#mkt)\n   * query parameter are mutually exclusive—do not specify both.\n   */\n  countryCode?: string;\n  /**\n   * An ID that uniquely identifies an image. Use this parameter to ensure that the specified image\n   * is the first image in the list of images that Bing returns. The\n   * [Image](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image)\n   * object's imageId field contains the ID that you set this parameter to.\n   */\n  id?: string;\n  /**\n   * The URL of an image that you want to get insights of. Use this parameter as an alternative to\n   * using the insightsToken parameter to specify the image. You may also specify the image by\n   * placing the binary of the image in the body of a POST request. If you use the binary option,\n   * see the\n   * [Content-Type](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#contenttype)\n   * header. The maximum supported image size is 1 MB. Use this parameter only with the Insights\n   * API. Do not specify this parameter when calling the Images, Trending Images, or Web Search\n   * APIs.\n   */\n  imageUrl?: string;\n  /**\n   * An image token. The\n   * [Image](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image)\n   * object's\n   * [imageInsightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image-imageinsightstoken)\n   * contains the token. Specify this parameter to get additional information about an image, such\n   * as a caption or shopping source. For a list of the additional information about an image that\n   * you can get, see the\n   * [modules](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#modulesrequested)\n   * query parameter. Use this parameter only with the Insights API. Do not specify this parameter\n   * when calling the Images, Trending Images, or Web Search APIs.\n   */\n  insightsToken?: string;\n  /**\n   * A comma-delimited list of insights to request. The following are the possible case-insensitive\n   * values. All: Return all insights, if available, except RecognizedEntities. BRQ: Best\n   * representative query. The query term that best describes the image. Caption: A caption that\n   * provides information about the image. If the caption contains entities, the response may\n   * include links to images of those entities. Collections: A list of related images. Recipes: A\n   * list of recipes for cooking the food shown in the images. PagesIncluding: A list of webpages\n   * that include the image. RecognizedEntities: A list of entities (people) that were recognized\n   * in the image. NOTE: You may not specify this module with any other module. If you specify it\n   * with other modules, the response doesn't include recognized entities. RelatedSearches: A list\n   * of related searches made by others. ShoppingSources: A list of merchants where you can buy\n   * related offerings. SimilarImages: A list of images that are visually similar to the original\n   * image. SimilarProducts: A list of images that contain a product that is similar to a product\n   * found in the original image. Tags: Provides characteristics of the type of content found in\n   * the image. For example, if the image is of a person, the tags might indicate the person's\n   * gender and type of clothes they're wearing. If you specify a module and there is no data for\n   * the module, the response object doesn't include the related field. For example, if you specify\n   * Caption and it does not exist, the response doesn't include the imageCaption field. To include\n   * related searches, the request must include the original query string. Although the original\n   * query string is not required for similar images or products, you should always include it\n   * because it can help improve relevance and the results. Use this parameter only with the\n   * Insights API. Do not specify this parameter when calling the Images, Trending Images, or Web\n   * Search APIs.\n   */\n  modules?: ImageInsightModule[];\n  /**\n   * The market where the results come from. Typically, mkt is the country where the user is making\n   * the request from. However, it could be a different country if the user is not located in a\n   * country where Bing delivers results. The market must be in the form <language code>-<country\n   * code>. For example, en-US. The string is case insensitive. For a list of possible market\n   * values, see [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes).\n   * NOTE: If known, you are encouraged to always specify the market. Specifying the market helps\n   * Bing route the request and return an appropriate and optimal response. If you specify a market\n   * that is not listed in [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes),\n   * Bing uses a best fit market code based on an internal mapping that is subject to change. This\n   * parameter and the\n   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#cc)\n   * query parameter are mutually exclusive—do not specify both.\n   */\n  market?: string;\n  /**\n   * Filter images for adult content. The following are the possible filter values. Off: May return\n   * images with adult content. If the request is through the Image Search API, the response\n   * includes thumbnail images that are clear (non-fuzzy). However, if the request is through the\n   * Web Search API, the response includes thumbnail images that are pixelated (fuzzy). Moderate:\n   * If the request is through the Image Search API, the response doesn't include images with adult\n   * content. If the request is through the Web Search API, the response may include images with\n   * adult content (the thumbnail images are pixelated (fuzzy)). Strict: Do not return images with\n   * adult content. The default is Moderate. If the request comes from a market that Bing's adult\n   * policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses\n   * Strict. If you use the site: query operator, there is the chance that the response may contain\n   * adult content regardless of what the safeSearch query parameter is set to. Use site: only if\n   * you are aware of the content on the site and your scenario supports the possibility of adult\n   * content. Possible values include: 'Off', 'Moderate', 'Strict'\n   */\n  safeSearch?: SafeSearch;\n  /**\n   * The language to use for user interface strings. Specify the language using the ISO 639-1\n   * 2-letter language code. For example, the language code for English is EN. The default is EN\n   * (English). Although optional, you should always specify the language. Typically, you set\n   * setLang to the same language specified by mkt unless the user wants the user interface strings\n   * displayed in a different language. This parameter and the\n   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#acceptlanguage)\n   * header are mutually exclusive; do not specify both. A user interface string is a string that's\n   * used as a label in a user interface. There are few user interface strings in the JSON response\n   * objects. Also, any links to Bing.com properties in the response objects apply the specified\n   * language.\n   */\n  setLang?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImagesTrendingOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * A comma-delimited list of one or more languages to use for user interface strings. The list is\n   * in decreasing order of preference. For additional information, including expected format, see\n   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#setlang)\n   * query parameter are mutually exclusive; do not specify both. If you set this header, you must\n   * also specify the\n   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#cc)\n   * query parameter. To determine the market to return results for, Bing uses the first supported\n   * language it finds from the list and combines it with the cc parameter value. If the list does\n   * not include a supported language, Bing finds the closest language and market that supports the\n   * request or it uses an aggregated or default market for the results. To determine the market\n   * that Bing used, see the BingAPIs-Market header. Use this header and the cc query parameter\n   * only if you specify multiple languages. Otherwise, use the\n   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#mkt)\n   * and\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#setlang)\n   * query parameters. A user interface string is a string that's used as a label in a user\n   * interface. There are few user interface strings in the JSON response objects. Any links to\n   * Bing.com properties in the response objects apply the specified language.\n   */\n  acceptLanguage?: string;\n  /**\n   * The user agent originating the request. Bing uses the user agent to provide mobile users with\n   * an optimized experience. Although optional, you are encouraged to always specify this header.\n   * The user-agent should be the same string that any commonly used browser sends. For information\n   * about user agents, see [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\n   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0 (compatible; MSIE\n   * 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android:\n   * Mozilla / 5.0 (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit /\n   * 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla / 5.0 (iPhone;\n   * CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142\n   * iPhone4; 1 BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident /\n   * 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X)\n   * AppleWebKit / 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\n   */\n  userAgent?: string;\n  /**\n   * Bing uses this header to provide users with consistent behavior across Bing API calls. Bing\n   * often flights new features and improvements, and it uses the client ID as a key for assigning\n   * traffic on different flights. If you do not use the same client ID for a user across multiple\n   * requests, then Bing may assign the user to multiple conflicting flights. Being assigned to\n   * multiple conflicting flights can lead to an inconsistent user experience. For example, if the\n   * second request has a different flight assignment than the first, the experience may be\n   * unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search\n   * history, providing a richer experience for the user. Bing also uses this header to help\n   * improve result rankings by analyzing the activity generated by a client ID. The relevance\n   * improvements help with better quality of results delivered by Bing APIs and in turn enables\n   * higher click-through rates for the API consumer. IMPORTANT: Although optional, you should\n   * consider this header required. Persisting the client ID across multiple requests for the same\n   * end user and device combination enables 1) the API consumer to receive a consistent user\n   * experience, and 2) higher click-through rates via better quality of results from the Bing\n   * APIs. Each user that uses your application on the device must have a unique, Bing generated\n   * client ID. If you do not include this header in the request, Bing generates an ID and returns\n   * it in the X-MSEdge-ClientID response header. The only time that you should NOT include this\n   * header in a request is the first time the user uses your app on that device. Use the client ID\n   * for each Bing API request that your app makes for this user on the device. Persist the client\n   * ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used\n   * across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the\n   * device's persistent storage to persist the ID. The next time the user uses your app on that\n   * device, get the client ID that you persisted. Bing responses may or may not include this\n   * header. If the response includes this header, capture the client ID and use it for all\n   * subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID,\n   * you must not include cookies in the request.\n   */\n  clientId?: string;\n  /**\n   * The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's\n   * location. Bing uses the location information to determine safe search behavior. Although\n   * optional, you are encouraged to always specify this header and the X-Search-Location header.\n   * Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the\n   * address results in the location not being anywhere near the device's actual location, which\n   * may result in Bing serving erroneous results.\n   */\n  clientIp?: string;\n  /**\n   * A semicolon-delimited list of key/value pairs that describe the client's geographical\n   * location. Bing uses the location information to determine safe search behavior and to return\n   * relevant local content. Specify the key/value pair as <key>:<value>. The following are the\n   * keys that you use to specify the user's location. lat (required): The latitude of the client's\n   * location, in degrees. The latitude must be greater than or equal to -90.0 and less than or\n   * equal to +90.0. Negative values indicate southern latitudes and positive values indicate\n   * northern latitudes. long (required): The longitude of the client's location, in degrees. The\n   * longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative\n   * values indicate western longitudes and positive values indicate eastern longitudes. re\n   * (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates.\n   * Pass the value returned by the device's location service. Typical values might be 22m for\n   * GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts\n   * (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp\n   * is the number of seconds since January 1, 1970.) head (optional): The client's relative\n   * heading or direction of travel. Specify the direction of travel as degrees from 0 through 360,\n   * counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp\n   * (optional): The horizontal velocity (speed), in meters per second, that the client device is\n   * traveling. alt (optional): The altitude of the client device, in meters. are (optional): The\n   * radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key\n   * only if you specify the alt key. Although many of the keys are optional, the more information\n   * that you provide, the more accurate the location results are. Although optional, you are\n   * encouraged to always specify the user's geographical location. Providing the location is\n   * especially important if the client's IP address does not accurately reflect the user's\n   * physical location (for example, if the client uses VPN). For optimal results, you should\n   * include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include\n   * this header.\n   */\n  location?: string;\n  /**\n   * A 2-character country code of the country where the results come from. This API supports only\n   * the United States, Canada, Australia, and China markets. If you specify this query parameter,\n   * it must be set to us, ca, au, or cn. If you set this parameter, you must also specify the\n   * Accept-Language header. Bing uses the first supported language it finds from the languages\n   * list, and combine that language with the country code that you specify to determine the market\n   * to return results for. If the languages list does not include a supported language, Bing finds\n   * the closest language and market that supports the request, or it may use an aggregated or\n   * default market for the results instead of a specified one. You should use this query parameter\n   * and the Accept-Language query parameter only if you specify multiple languages; otherwise, you\n   * should use the mkt and setLang query parameters. This parameter and the mkt query parameter\n   * are mutually exclusive—do not specify both.\n   */\n  countryCode?: string;\n  /**\n   * The market where the results come from. Typically, mkt is the country where the user is making\n   * the request from. However, it could be a different country if the user is not located in a\n   * country where Bing delivers results. The market must be in the form <language code>-<country\n   * code>. For example, en-US. The string is case insensitive. For a list of possible market\n   * values, see [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes).\n   * NOTE: If known, you are encouraged to always specify the market. Specifying the market helps\n   * Bing route the request and return an appropriate and optimal response. If you specify a market\n   * that is not listed in [Market\n   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes),\n   * Bing uses a best fit market code based on an internal mapping that is subject to change. This\n   * parameter and the\n   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#cc)\n   * query parameter are mutually exclusive—do not specify both.\n   */\n  market?: string;\n  /**\n   * Filter images for adult content. The following are the possible filter values. Off: May return\n   * images with adult content. If the request is through the Image Search API, the response\n   * includes thumbnail images that are clear (non-fuzzy). However, if the request is through the\n   * Web Search API, the response includes thumbnail images that are pixelated (fuzzy). Moderate:\n   * If the request is through the Image Search API, the response doesn't include images with adult\n   * content. If the request is through the Web Search API, the response may include images with\n   * adult content (the thumbnail images are pixelated (fuzzy)). Strict: Do not return images with\n   * adult content. The default is Moderate. If the request comes from a market that Bing's adult\n   * policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses\n   * Strict. If you use the site: query operator, there is the chance that the response may contain\n   * adult content regardless of what the safeSearch query parameter is set to. Use site: only if\n   * you are aware of the content on the site and your scenario supports the possibility of adult\n   * content. Possible values include: 'Off', 'Moderate', 'Strict'\n   */\n  safeSearch?: SafeSearch;\n  /**\n   * The language to use for user interface strings. Specify the language using the ISO 639-1\n   * 2-letter language code. For example, the language code for English is EN. The default is EN\n   * (English). Although optional, you should always specify the language. Typically, you set\n   * setLang to the same language specified by mkt unless the user wants the user interface strings\n   * displayed in a different language. This parameter and the\n   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#acceptlanguage)\n   * header are mutually exclusive; do not specify both. A user interface string is a string that's\n   * used as a label in a user interface. There are few user interface strings in the JSON response\n   * objects. Also, any links to Bing.com properties in the response objects apply the specified\n   * language.\n   */\n  setLang?: string;\n}\n\n/**\n * Defines values for Currency.\n * Possible values include: 'USD', 'CAD', 'GBP', 'EUR', 'COP', 'JPY', 'CNY', 'AUD', 'INR', 'AED',\n * 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD',\n * 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD', 'BTN', 'BWP', 'BYR', 'BZD', 'CDF', 'CHE',\n * 'CHF', 'CHW', 'CLF', 'CLP', 'COU', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP',\n * 'DZD', 'EGP', 'ERN', 'ETB', 'FJD', 'FKP', 'GEL', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD',\n * 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'KES',\n * 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL',\n * 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN',\n * 'MXV', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK',\n * 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG',\n * 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT',\n * 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'UYU', 'UZS', 'VEF', 'VND', 'VUV',\n * 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'\n * @readonly\n * @enum {string}\n */\nexport type Currency = 'USD' | 'CAD' | 'GBP' | 'EUR' | 'COP' | 'JPY' | 'CNY' | 'AUD' | 'INR' | 'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AWG' | 'AZN' | 'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BOV' | 'BRL' | 'BSD' | 'BTN' | 'BWP' | 'BYR' | 'BZD' | 'CDF' | 'CHE' | 'CHF' | 'CHW' | 'CLF' | 'CLP' | 'COU' | 'CRC' | 'CUC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' | 'EGP' | 'ERN' | 'ETB' | 'FJD' | 'FKP' | 'GEL' | 'GHS' | 'GIP' | 'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HRK' | 'HTG' | 'HUF' | 'IDR' | 'ILS' | 'IQD' | 'IRR' | 'ISK' | 'JMD' | 'JOD' | 'KES' | 'KGS' | 'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' | 'LRD' | 'LSL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' | 'MRO' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MXV' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' | 'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' | 'PYG' | 'QAR' | 'RON' | 'RSD' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' | 'SEK' | 'SGD' | 'SHP' | 'SLL' | 'SOS' | 'SRD' | 'SSP' | 'STD' | 'SYP' | 'SZL' | 'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' | 'UGX' | 'UYU' | 'UZS' | 'VEF' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XCD' | 'XOF' | 'XPF' | 'YER' | 'ZAR' | 'ZMW';\n\n/**\n * Defines values for ItemAvailability.\n * Possible values include: 'Discontinued', 'InStock', 'InStoreOnly', 'LimitedAvailability',\n * 'OnlineOnly', 'OutOfStock', 'PreOrder', 'SoldOut'\n * @readonly\n * @enum {string}\n */\nexport type ItemAvailability = 'Discontinued' | 'InStock' | 'InStoreOnly' | 'LimitedAvailability' | 'OnlineOnly' | 'OutOfStock' | 'PreOrder' | 'SoldOut';\n\n/**\n * Defines values for ErrorCode.\n * Possible values include: 'None', 'ServerError', 'InvalidRequest', 'RateLimitExceeded',\n * 'InvalidAuthorization', 'InsufficientAuthorization'\n * @readonly\n * @enum {string}\n */\nexport type ErrorCode = 'None' | 'ServerError' | 'InvalidRequest' | 'RateLimitExceeded' | 'InvalidAuthorization' | 'InsufficientAuthorization';\n\n/**\n * Defines values for ErrorSubCode.\n * Possible values include: 'UnexpectedError', 'ResourceError', 'NotImplemented',\n * 'ParameterMissing', 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',\n * 'AuthorizationMissing', 'AuthorizationRedundancy', 'AuthorizationDisabled',\n * 'AuthorizationExpired'\n * @readonly\n * @enum {string}\n */\nexport type ErrorSubCode = 'UnexpectedError' | 'ResourceError' | 'NotImplemented' | 'ParameterMissing' | 'ParameterInvalidValue' | 'HttpNotAllowed' | 'Blocked' | 'AuthorizationMissing' | 'AuthorizationRedundancy' | 'AuthorizationDisabled' | 'AuthorizationExpired';\n\n/**\n * Defines values for ImageAspect.\n * Possible values include: 'All', 'Square', 'Wide', 'Tall'\n * @readonly\n * @enum {string}\n */\nexport type ImageAspect = 'All' | 'Square' | 'Wide' | 'Tall';\n\n/**\n * Defines values for ImageColor.\n * Possible values include: 'ColorOnly', 'Monochrome', 'Black', 'Blue', 'Brown', 'Gray', 'Green',\n * 'Orange', 'Pink', 'Purple', 'Red', 'Teal', 'White', 'Yellow'\n * @readonly\n * @enum {string}\n */\nexport type ImageColor = 'ColorOnly' | 'Monochrome' | 'Black' | 'Blue' | 'Brown' | 'Gray' | 'Green' | 'Orange' | 'Pink' | 'Purple' | 'Red' | 'Teal' | 'White' | 'Yellow';\n\n/**\n * Defines values for Freshness.\n * Possible values include: 'Day', 'Week', 'Month'\n * @readonly\n * @enum {string}\n */\nexport type Freshness = 'Day' | 'Week' | 'Month';\n\n/**\n * Defines values for ImageContent.\n * Possible values include: 'Face', 'Portrait'\n * @readonly\n * @enum {string}\n */\nexport type ImageContent = 'Face' | 'Portrait';\n\n/**\n * Defines values for ImageType.\n * Possible values include: 'AnimatedGif', 'Clipart', 'Line', 'Photo', 'Shopping', 'Transparent'\n * @readonly\n * @enum {string}\n */\nexport type ImageType = 'AnimatedGif' | 'Clipart' | 'Line' | 'Photo' | 'Shopping' | 'Transparent';\n\n/**\n * Defines values for ImageLicense.\n * Possible values include: 'All', 'Any', 'Public', 'Share', 'ShareCommercially', 'Modify',\n * 'ModifyCommercially'\n * @readonly\n * @enum {string}\n */\nexport type ImageLicense = 'All' | 'Any' | 'Public' | 'Share' | 'ShareCommercially' | 'Modify' | 'ModifyCommercially';\n\n/**\n * Defines values for SafeSearch.\n * Possible values include: 'Off', 'Moderate', 'Strict'\n * @readonly\n * @enum {string}\n */\nexport type SafeSearch = 'Off' | 'Moderate' | 'Strict';\n\n/**\n * Defines values for ImageSize.\n * Possible values include: 'All', 'Small', 'Medium', 'Large', 'Wallpaper'\n * @readonly\n * @enum {string}\n */\nexport type ImageSize = 'All' | 'Small' | 'Medium' | 'Large' | 'Wallpaper';\n\n/**\n * Defines values for ImageCropType.\n * Possible values include: 'Rectangular'\n * @readonly\n * @enum {string}\n */\nexport type ImageCropType = 'Rectangular';\n\n/**\n * Defines values for ImageInsightModule.\n * Possible values include: 'All', 'BRQ', 'Caption', 'Collections', 'Recipes', 'PagesIncluding',\n * 'RecognizedEntities', 'RelatedSearches', 'ShoppingSources', 'SimilarImages', 'SimilarProducts',\n * 'Tags'\n * @readonly\n * @enum {string}\n */\nexport type ImageInsightModule = 'All' | 'BRQ' | 'Caption' | 'Collections' | 'Recipes' | 'PagesIncluding' | 'RecognizedEntities' | 'RelatedSearches' | 'ShoppingSources' | 'SimilarImages' | 'SimilarProducts' | 'Tags';\n\n/**\n * Contains response data for the search operation.\n */\nexport type ImagesSearchResponse = Images & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Images;\n    };\n};\n\n/**\n * Contains response data for the details operation.\n */\nexport type ImagesDetailsResponse = ImageInsights & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ImageInsights;\n    };\n};\n\n/**\n * Contains response data for the trending operation.\n */\nexport type ImagesTrendingResponse = TrendingImages & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TrendingImages;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n\nexport const ResponseBase: msRest.CompositeMapper = {\n  serializedName: \"ResponseBase\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"_type\",\n      clientName: \"_type\"\n    },\n    uberParent: \"ResponseBase\",\n    className: \"ResponseBase\",\n    modelProperties: {\n      _type: {\n        required: true,\n        serializedName: \"_type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Identifiable: msRest.CompositeMapper = {\n  serializedName: \"Identifiable\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Identifiable\",\n    modelProperties: {\n      ...ResponseBase.type.modelProperties,\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Response: msRest.CompositeMapper = {\n  serializedName: \"Response\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Response\",\n    modelProperties: {\n      ...Identifiable.type.modelProperties,\n      readLink: {\n        readOnly: true,\n        serializedName: \"readLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      webSearchUrl: {\n        readOnly: true,\n        serializedName: \"webSearchUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Thing: msRest.CompositeMapper = {\n  serializedName: \"Thing\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Thing\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      url: {\n        readOnly: true,\n        serializedName: \"url\",\n        type: {\n          name: \"String\"\n        }\n      },\n      image: {\n        readOnly: true,\n        serializedName: \"image\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      },\n      description: {\n        readOnly: true,\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      alternateName: {\n        readOnly: true,\n        serializedName: \"alternateName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      bingId: {\n        readOnly: true,\n        serializedName: \"bingId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Organization: msRest.CompositeMapper = {\n  serializedName: \"Organization\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Organization\",\n    modelProperties: {\n      ...Thing.type.modelProperties\n    }\n  }\n};\n\nexport const PropertiesItem: msRest.CompositeMapper = {\n  serializedName: \"Properties/Item\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"_type\",\n      clientName: \"_type\"\n    },\n    uberParent: \"PropertiesItem\",\n    className: \"PropertiesItem\",\n    modelProperties: {\n      text: {\n        readOnly: true,\n        serializedName: \"text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      _type: {\n        required: true,\n        serializedName: \"_type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Rating: msRest.CompositeMapper = {\n  serializedName: \"Rating\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: PropertiesItem.type.polymorphicDiscriminator,\n    uberParent: \"PropertiesItem\",\n    className: \"Rating\",\n    modelProperties: {\n      ...PropertiesItem.type.modelProperties,\n      ratingValue: {\n        required: true,\n        serializedName: \"ratingValue\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      bestRating: {\n        readOnly: true,\n        serializedName: \"bestRating\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AggregateRating: msRest.CompositeMapper = {\n  serializedName: \"AggregateRating\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: PropertiesItem.type.polymorphicDiscriminator,\n    uberParent: \"PropertiesItem\",\n    className: \"AggregateRating\",\n    modelProperties: {\n      ...Rating.type.modelProperties,\n      reviewCount: {\n        readOnly: true,\n        serializedName: \"reviewCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Offer: msRest.CompositeMapper = {\n  serializedName: \"Offer\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Offer\",\n    modelProperties: {\n      ...Thing.type.modelProperties,\n      seller: {\n        readOnly: true,\n        serializedName: \"seller\",\n        type: {\n          name: \"Composite\",\n          className: \"Organization\"\n        }\n      },\n      price: {\n        readOnly: true,\n        serializedName: \"price\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      priceCurrency: {\n        readOnly: true,\n        serializedName: \"priceCurrency\",\n        defaultValue: 'USD',\n        type: {\n          name: \"String\"\n        }\n      },\n      availability: {\n        readOnly: true,\n        serializedName: \"availability\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aggregateRating: {\n        readOnly: true,\n        serializedName: \"aggregateRating\",\n        type: {\n          name: \"Composite\",\n          className: \"AggregateRating\"\n        }\n      },\n      lastUpdated: {\n        readOnly: true,\n        serializedName: \"lastUpdated\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AggregateOffer: msRest.CompositeMapper = {\n  serializedName: \"AggregateOffer\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"AggregateOffer\",\n    modelProperties: {\n      ...Offer.type.modelProperties,\n      offers: {\n        readOnly: true,\n        serializedName: \"offers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Offer\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImagesImageMetadata: msRest.CompositeMapper = {\n  serializedName: \"Images/ImageMetadata\",\n  type: {\n    name: \"Composite\",\n    className: \"ImagesImageMetadata\",\n    modelProperties: {\n      shoppingSourcesCount: {\n        readOnly: true,\n        serializedName: \"shoppingSourcesCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      recipeSourcesCount: {\n        readOnly: true,\n        serializedName: \"recipeSourcesCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      aggregateOffer: {\n        readOnly: true,\n        serializedName: \"aggregateOffer\",\n        type: {\n          name: \"Composite\",\n          className: \"AggregateOffer\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreativeWork: msRest.CompositeMapper = {\n  serializedName: \"CreativeWork\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"CreativeWork\",\n    modelProperties: {\n      ...Thing.type.modelProperties,\n      thumbnailUrl: {\n        readOnly: true,\n        serializedName: \"thumbnailUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provider: {\n        readOnly: true,\n        serializedName: \"provider\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Thing\"\n            }\n          }\n        }\n      },\n      datePublished: {\n        readOnly: true,\n        serializedName: \"datePublished\",\n        type: {\n          name: \"String\"\n        }\n      },\n      text: {\n        readOnly: true,\n        serializedName: \"text\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MediaObject: msRest.CompositeMapper = {\n  serializedName: \"MediaObject\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"MediaObject\",\n    modelProperties: {\n      ...CreativeWork.type.modelProperties,\n      contentUrl: {\n        readOnly: true,\n        serializedName: \"contentUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostPageUrl: {\n        readOnly: true,\n        serializedName: \"hostPageUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentSize: {\n        readOnly: true,\n        serializedName: \"contentSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encodingFormat: {\n        readOnly: true,\n        serializedName: \"encodingFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostPageDisplayUrl: {\n        readOnly: true,\n        serializedName: \"hostPageDisplayUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      width: {\n        readOnly: true,\n        serializedName: \"width\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        readOnly: true,\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageObject: msRest.CompositeMapper = {\n  serializedName: \"ImageObject\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageObject\",\n    modelProperties: {\n      ...MediaObject.type.modelProperties,\n      thumbnail: {\n        readOnly: true,\n        serializedName: \"thumbnail\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      },\n      imageInsightsToken: {\n        readOnly: true,\n        serializedName: \"imageInsightsToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      insightsMetadata: {\n        readOnly: true,\n        serializedName: \"insightsMetadata\",\n        type: {\n          name: \"Composite\",\n          className: \"ImagesImageMetadata\"\n        }\n      },\n      imageId: {\n        readOnly: true,\n        serializedName: \"imageId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accentColor: {\n        readOnly: true,\n        serializedName: \"accentColor\",\n        type: {\n          name: \"String\"\n        }\n      },\n      visualWords: {\n        readOnly: true,\n        serializedName: \"visualWords\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Query: msRest.CompositeMapper = {\n  serializedName: \"Query\",\n  type: {\n    name: \"Composite\",\n    className: \"Query\",\n    modelProperties: {\n      text: {\n        required: true,\n        serializedName: \"text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayText: {\n        readOnly: true,\n        serializedName: \"displayText\",\n        type: {\n          name: \"String\"\n        }\n      },\n      webSearchUrl: {\n        readOnly: true,\n        serializedName: \"webSearchUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      searchLink: {\n        readOnly: true,\n        serializedName: \"searchLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      thumbnail: {\n        readOnly: true,\n        serializedName: \"thumbnail\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const PivotSuggestions: msRest.CompositeMapper = {\n  serializedName: \"PivotSuggestions\",\n  type: {\n    name: \"Composite\",\n    className: \"PivotSuggestions\",\n    modelProperties: {\n      pivot: {\n        required: true,\n        serializedName: \"pivot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      suggestions: {\n        required: true,\n        serializedName: \"suggestions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Answer: msRest.CompositeMapper = {\n  serializedName: \"Answer\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Answer\",\n    modelProperties: {\n      ...Response.type.modelProperties\n    }\n  }\n};\n\nexport const SearchResultsAnswer: msRest.CompositeMapper = {\n  serializedName: \"SearchResultsAnswer\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"SearchResultsAnswer\",\n    modelProperties: {\n      ...Answer.type.modelProperties,\n      totalEstimatedMatches: {\n        readOnly: true,\n        serializedName: \"totalEstimatedMatches\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Images: msRest.CompositeMapper = {\n  serializedName: \"Images\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Images\",\n    modelProperties: {\n      ...SearchResultsAnswer.type.modelProperties,\n      nextOffset: {\n        readOnly: true,\n        serializedName: \"nextOffset\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImageObject\"\n            }\n          }\n        }\n      },\n      queryExpansions: {\n        readOnly: true,\n        serializedName: \"queryExpansions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      },\n      pivotSuggestions: {\n        readOnly: true,\n        serializedName: \"pivotSuggestions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PivotSuggestions\"\n            }\n          }\n        }\n      },\n      similarTerms: {\n        readOnly: true,\n        serializedName: \"similarTerms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: msRest.CompositeMapper = {\n  serializedName: \"Error\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      code: {\n        required: true,\n        serializedName: \"code\",\n        defaultValue: 'None',\n        type: {\n          name: \"String\"\n        }\n      },\n      subCode: {\n        readOnly: true,\n        serializedName: \"subCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        required: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      moreDetails: {\n        readOnly: true,\n        serializedName: \"moreDetails\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parameter: {\n        readOnly: true,\n        serializedName: \"parameter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: msRest.CompositeMapper = {\n  serializedName: \"ErrorResponse\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      errors: {\n        required: true,\n        serializedName: \"errors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorModel\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImageInsightsImageCaption: msRest.CompositeMapper = {\n  serializedName: \"ImageInsights/ImageCaption\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageInsightsImageCaption\",\n    modelProperties: {\n      caption: {\n        required: true,\n        serializedName: \"caption\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataSourceUrl: {\n        required: true,\n        serializedName: \"dataSourceUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      relatedSearches: {\n        required: true,\n        serializedName: \"relatedSearches\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WebPage: msRest.CompositeMapper = {\n  serializedName: \"WebPage\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"WebPage\",\n    modelProperties: {\n      ...CreativeWork.type.modelProperties\n    }\n  }\n};\n\nexport const CollectionPage: msRest.CompositeMapper = {\n  serializedName: \"CollectionPage\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"CollectionPage\",\n    modelProperties: {\n      ...WebPage.type.modelProperties\n    }\n  }\n};\n\nexport const ImageGallery: msRest.CompositeMapper = {\n  serializedName: \"ImageGallery\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageGallery\",\n    modelProperties: {\n      ...CollectionPage.type.modelProperties,\n      source: {\n        readOnly: true,\n        serializedName: \"source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      imagesCount: {\n        readOnly: true,\n        serializedName: \"imagesCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      followersCount: {\n        readOnly: true,\n        serializedName: \"followersCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelatedCollectionsModule: msRest.CompositeMapper = {\n  serializedName: \"RelatedCollectionsModule\",\n  type: {\n    name: \"Composite\",\n    className: \"RelatedCollectionsModule\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImageGallery\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImagesModule: msRest.CompositeMapper = {\n  serializedName: \"ImagesModule\",\n  type: {\n    name: \"Composite\",\n    className: \"ImagesModule\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImageObject\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RelatedSearchesModule: msRest.CompositeMapper = {\n  serializedName: \"RelatedSearchesModule\",\n  type: {\n    name: \"Composite\",\n    className: \"RelatedSearchesModule\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Recipe: msRest.CompositeMapper = {\n  serializedName: \"Recipe\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Recipe\",\n    modelProperties: {\n      ...CreativeWork.type.modelProperties,\n      cookTime: {\n        readOnly: true,\n        serializedName: \"cookTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prepTime: {\n        readOnly: true,\n        serializedName: \"prepTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      totalTime: {\n        readOnly: true,\n        serializedName: \"totalTime\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecipesModule: msRest.CompositeMapper = {\n  serializedName: \"RecipesModule\",\n  type: {\n    name: \"Composite\",\n    className: \"RecipesModule\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Recipe\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Intangible: msRest.CompositeMapper = {\n  serializedName: \"Intangible\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Intangible\",\n    modelProperties: {\n      ...Thing.type.modelProperties\n    }\n  }\n};\n\nexport const StructuredValue: msRest.CompositeMapper = {\n  serializedName: \"StructuredValue\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"StructuredValue\",\n    modelProperties: {\n      ...Intangible.type.modelProperties\n    }\n  }\n};\n\nexport const NormalizedRectangle: msRest.CompositeMapper = {\n  serializedName: \"NormalizedRectangle\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"NormalizedRectangle\",\n    modelProperties: {\n      ...StructuredValue.type.modelProperties,\n      left: {\n        required: true,\n        serializedName: \"left\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      top: {\n        required: true,\n        serializedName: \"top\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      right: {\n        required: true,\n        serializedName: \"right\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      bottom: {\n        required: true,\n        serializedName: \"bottom\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecognizedEntity: msRest.CompositeMapper = {\n  serializedName: \"RecognizedEntity\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"RecognizedEntity\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      entity: {\n        readOnly: true,\n        serializedName: \"entity\",\n        type: {\n          name: \"Composite\",\n          className: \"Thing\"\n        }\n      },\n      matchConfidence: {\n        readOnly: true,\n        serializedName: \"matchConfidence\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecognizedEntityRegion: msRest.CompositeMapper = {\n  serializedName: \"RecognizedEntityRegion\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"RecognizedEntityRegion\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      region: {\n        readOnly: true,\n        serializedName: \"region\",\n        type: {\n          name: \"Composite\",\n          className: \"NormalizedRectangle\"\n        }\n      },\n      matchingEntities: {\n        readOnly: true,\n        serializedName: \"matchingEntities\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecognizedEntity\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RecognizedEntityGroup: msRest.CompositeMapper = {\n  serializedName: \"RecognizedEntityGroup\",\n  type: {\n    name: \"Composite\",\n    className: \"RecognizedEntityGroup\",\n    modelProperties: {\n      recognizedEntityRegions: {\n        required: true,\n        serializedName: \"recognizedEntityRegions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecognizedEntityRegion\"\n            }\n          }\n        }\n      },\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecognizedEntitiesModule: msRest.CompositeMapper = {\n  serializedName: \"RecognizedEntitiesModule\",\n  type: {\n    name: \"Composite\",\n    className: \"RecognizedEntitiesModule\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecognizedEntityGroup\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const InsightsTag: msRest.CompositeMapper = {\n  serializedName: \"InsightsTag\",\n  type: {\n    name: \"Composite\",\n    className: \"InsightsTag\",\n    modelProperties: {\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageTagsModule: msRest.CompositeMapper = {\n  serializedName: \"ImageTagsModule\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageTagsModule\",\n    modelProperties: {\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InsightsTag\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImageInsights: msRest.CompositeMapper = {\n  serializedName: \"ImageInsights\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageInsights\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      imageInsightsToken: {\n        readOnly: true,\n        serializedName: \"imageInsightsToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      bestRepresentativeQuery: {\n        readOnly: true,\n        serializedName: \"bestRepresentativeQuery\",\n        type: {\n          name: \"Composite\",\n          className: \"Query\"\n        }\n      },\n      imageCaption: {\n        readOnly: true,\n        serializedName: \"imageCaption\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageInsightsImageCaption\"\n        }\n      },\n      relatedCollections: {\n        readOnly: true,\n        serializedName: \"relatedCollections\",\n        type: {\n          name: \"Composite\",\n          className: \"RelatedCollectionsModule\"\n        }\n      },\n      pagesIncluding: {\n        readOnly: true,\n        serializedName: \"pagesIncluding\",\n        type: {\n          name: \"Composite\",\n          className: \"ImagesModule\"\n        }\n      },\n      shoppingSources: {\n        readOnly: true,\n        serializedName: \"shoppingSources\",\n        type: {\n          name: \"Composite\",\n          className: \"AggregateOffer\"\n        }\n      },\n      relatedSearches: {\n        readOnly: true,\n        serializedName: \"relatedSearches\",\n        type: {\n          name: \"Composite\",\n          className: \"RelatedSearchesModule\"\n        }\n      },\n      recipes: {\n        readOnly: true,\n        serializedName: \"recipes\",\n        type: {\n          name: \"Composite\",\n          className: \"RecipesModule\"\n        }\n      },\n      visuallySimilarImages: {\n        readOnly: true,\n        serializedName: \"visuallySimilarImages\",\n        type: {\n          name: \"Composite\",\n          className: \"ImagesModule\"\n        }\n      },\n      visuallySimilarProducts: {\n        readOnly: true,\n        serializedName: \"visuallySimilarProducts\",\n        type: {\n          name: \"Composite\",\n          className: \"ImagesModule\"\n        }\n      },\n      recognizedEntityGroups: {\n        readOnly: true,\n        serializedName: \"recognizedEntityGroups\",\n        type: {\n          name: \"Composite\",\n          className: \"RecognizedEntitiesModule\"\n        }\n      },\n      imageTags: {\n        readOnly: true,\n        serializedName: \"imageTags\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageTagsModule\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrendingImagesTile: msRest.CompositeMapper = {\n  serializedName: \"TrendingImages/Tile\",\n  type: {\n    name: \"Composite\",\n    className: \"TrendingImagesTile\",\n    modelProperties: {\n      query: {\n        required: true,\n        serializedName: \"query\",\n        type: {\n          name: \"Composite\",\n          className: \"Query\"\n        }\n      },\n      image: {\n        required: true,\n        serializedName: \"image\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrendingImagesCategory: msRest.CompositeMapper = {\n  serializedName: \"TrendingImages/Category\",\n  type: {\n    name: \"Composite\",\n    className: \"TrendingImagesCategory\",\n    modelProperties: {\n      title: {\n        required: true,\n        serializedName: \"title\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tiles: {\n        required: true,\n        serializedName: \"tiles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TrendingImagesTile\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TrendingImages: msRest.CompositeMapper = {\n  serializedName: \"TrendingImages\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"TrendingImages\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      categories: {\n        required: true,\n        serializedName: \"categories\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TrendingImagesCategory\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Person: msRest.CompositeMapper = {\n  serializedName: \"Person\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Person\",\n    modelProperties: {\n      ...Thing.type.modelProperties,\n      jobTitle: {\n        readOnly: true,\n        serializedName: \"jobTitle\",\n        type: {\n          name: \"String\"\n        }\n      },\n      twitterProfile: {\n        readOnly: true,\n        serializedName: \"twitterProfile\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const discriminators = {\n  'ResponseBase.Organization' : Organization,\n  'PropertiesItem.AggregateRating' : AggregateRating,\n  'ResponseBase.Offer' : Offer,\n  'ResponseBase.AggregateOffer' : AggregateOffer,\n  'ResponseBase.ImageObject' : ImageObject,\n  'ResponseBase.Images' : Images,\n  'ResponseBase.SearchResultsAnswer' : SearchResultsAnswer,\n  'ResponseBase.Answer' : Answer,\n  'ResponseBase.MediaObject' : MediaObject,\n  'ResponseBase.Response' : Response,\n  'ResponseBase.Thing' : Thing,\n  'ResponseBase.CreativeWork' : CreativeWork,\n  'ResponseBase.Identifiable' : Identifiable,\n  'ResponseBase.ErrorResponse' : ErrorResponse,\n  'ResponseBase.ImageGallery' : ImageGallery,\n  'ResponseBase.Recipe' : Recipe,\n  'ResponseBase.NormalizedRectangle' : NormalizedRectangle,\n  'ResponseBase.RecognizedEntity' : RecognizedEntity,\n  'ResponseBase.RecognizedEntityRegion' : RecognizedEntityRegion,\n  'ResponseBase.ImageInsights' : ImageInsights,\n  'ResponseBase.TrendingImages' : TrendingImages,\n  'Properties/Item' : PropertiesItem,\n  'ResponseBase.WebPage' : WebPage,\n  'ResponseBase' : ResponseBase,\n  'ResponseBase.Person' : Person,\n  'ResponseBase.Intangible' : Intangible,\n  'PropertiesItem.Rating' : Rating,\n  'ResponseBase.CollectionPage' : CollectionPage,\n  'ResponseBase.StructuredValue' : StructuredValue\n\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  AggregateOffer,\n  AggregateRating,\n  Answer,\n  CollectionPage,\n  CreativeWork,\n  ErrorModel,\n  ErrorResponse,\n  Identifiable,\n  ImageGallery,\n  ImageInsights,\n  ImageInsightsImageCaption,\n  ImageObject,\n  Images,\n  ImagesImageMetadata,\n  ImagesModule,\n  ImageTagsModule,\n  InsightsTag,\n  Intangible,\n  MediaObject,\n  NormalizedRectangle,\n  Offer,\n  Organization,\n  Person,\n  PivotSuggestions,\n  PropertiesItem,\n  Query,\n  Rating,\n  Recipe,\n  RecipesModule,\n  RecognizedEntitiesModule,\n  RecognizedEntity,\n  RecognizedEntityGroup,\n  RecognizedEntityRegion,\n  RelatedCollectionsModule,\n  RelatedSearchesModule,\n  Response,\n  ResponseBase,\n  SearchResultsAnswer,\n  StructuredValue,\n  Thing,\n  TrendingImages,\n  TrendingImagesCategory,\n  TrendingImagesTile,\n  WebPage\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"acceptLanguage\"\n  ],\n  mapper: {\n    serializedName: \"Accept-Language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const aspect: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"aspect\"\n  ],\n  mapper: {\n    serializedName: \"aspect\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const clientId: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"clientId\"\n  ],\n  mapper: {\n    serializedName: \"X-MSEdge-ClientID\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const clientIp: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"clientIp\"\n  ],\n  mapper: {\n    serializedName: \"X-MSEdge-ClientIP\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const color: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"color\"\n  ],\n  mapper: {\n    serializedName: \"color\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentType: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"contentType\"\n  ],\n  mapper: {\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const count: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"count\"\n  ],\n  mapper: {\n    serializedName: \"count\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const countryCode: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"countryCode\"\n  ],\n  mapper: {\n    serializedName: \"cc\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const cropBottom: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"cropBottom\"\n  ],\n  mapper: {\n    serializedName: \"cab\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const cropLeft: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"cropLeft\"\n  ],\n  mapper: {\n    serializedName: \"cal\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const cropRight: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"cropRight\"\n  ],\n  mapper: {\n    serializedName: \"car\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const cropTop: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"cropTop\"\n  ],\n  mapper: {\n    serializedName: \"cat\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const cropType: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"cropType\"\n  ],\n  mapper: {\n    serializedName: \"ct\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const endpoint: msRest.OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    required: true,\n    serializedName: \"Endpoint\",\n    defaultValue: 'https://api.cognitive.microsoft.com',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const freshness: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"freshness\"\n  ],\n  mapper: {\n    serializedName: \"freshness\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const height: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"height\"\n  ],\n  mapper: {\n    serializedName: \"height\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const id: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"id\"\n  ],\n  mapper: {\n    serializedName: \"id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const imageContent: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"imageContent\"\n  ],\n  mapper: {\n    serializedName: \"imageContent\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const imageType: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"imageType\"\n  ],\n  mapper: {\n    serializedName: \"imageType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const imageUrl: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"imageUrl\"\n  ],\n  mapper: {\n    serializedName: \"imgUrl\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const insightsToken: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"insightsToken\"\n  ],\n  mapper: {\n    serializedName: \"insightsToken\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const license: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"license\"\n  ],\n  mapper: {\n    serializedName: \"license\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const location: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"location\"\n  ],\n  mapper: {\n    serializedName: \"X-Search-Location\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const market: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"market\"\n  ],\n  mapper: {\n    serializedName: \"mkt\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const maxFileSize: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"maxFileSize\"\n  ],\n  mapper: {\n    serializedName: \"maxFileSize\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const maxHeight: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"maxHeight\"\n  ],\n  mapper: {\n    serializedName: \"maxHeight\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const maxWidth: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"maxWidth\"\n  ],\n  mapper: {\n    serializedName: \"maxWidth\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const minFileSize: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"minFileSize\"\n  ],\n  mapper: {\n    serializedName: \"minFileSize\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const minHeight: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"minHeight\"\n  ],\n  mapper: {\n    serializedName: \"minHeight\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const minWidth: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"minWidth\"\n  ],\n  mapper: {\n    serializedName: \"minWidth\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const modules: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"modules\"\n  ],\n  mapper: {\n    serializedName: \"modules\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: msRest.QueryCollectionFormat.Csv\n};\nexport const offset: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"offset\"\n  ],\n  mapper: {\n    serializedName: \"offset\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const query: msRest.OperationQueryParameter = {\n  parameterPath: \"query\",\n  mapper: {\n    required: true,\n    serializedName: \"q\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const safeSearch: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"safeSearch\"\n  ],\n  mapper: {\n    serializedName: \"safeSearch\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const setLang: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"setLang\"\n  ],\n  mapper: {\n    serializedName: \"setLang\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const size: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"size\"\n  ],\n  mapper: {\n    serializedName: \"size\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const userAgent: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"userAgent\"\n  ],\n  mapper: {\n    serializedName: \"User-Agent\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const width: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"width\"\n  ],\n  mapper: {\n    serializedName: \"width\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const xBingApisSDK: msRest.OperationParameter = {\n  parameterPath: \"xBingApisSDK\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"X-BingApis-SDK\",\n    defaultValue: 'true',\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/imagesOperationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ImageSearchClientContext } from \"../imageSearchClientContext\";\n\n/** Class representing a ImagesOperations. */\nexport class ImagesOperations {\n  private readonly client: ImageSearchClientContext;\n\n  /**\n   * Create a ImagesOperations.\n   * @param {ImageSearchClientContext} client Reference to the service client.\n   */\n  constructor(client: ImageSearchClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * @summary The Image Search API lets you send a search query to Bing and get back a list of\n   * relevant images. This section provides technical details about the query parameters and headers\n   * that you use to request images and the JSON response objects that contain them. For examples\n   * that show how to make requests, see [Searching the Web for\n   * Images](https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web).\n   * @param query The user's search query term. The term cannot be empty. The term may contain [Bing\n   * Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For example, to limit\n   * images to a specific domain, use the [site:](http://msdn.microsoft.com/library/ff795613.aspx)\n   * operator. To help improve relevance of an insights query (see\n   * [insightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken)),\n   * you should always include the user's query term. Use this parameter only with the Image Search\n   * API.Do not specify this parameter when calling the Trending Images API.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImagesSearchResponse>\n   */\n  search(query: string, options?: Models.ImagesSearchOptionalParams): Promise<Models.ImagesSearchResponse>;\n  /**\n   * @param query The user's search query term. The term cannot be empty. The term may contain [Bing\n   * Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For example, to limit\n   * images to a specific domain, use the [site:](http://msdn.microsoft.com/library/ff795613.aspx)\n   * operator. To help improve relevance of an insights query (see\n   * [insightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken)),\n   * you should always include the user's query term. Use this parameter only with the Image Search\n   * API.Do not specify this parameter when calling the Trending Images API.\n   * @param callback The callback\n   */\n  search(query: string, callback: msRest.ServiceCallback<Models.Images>): void;\n  /**\n   * @param query The user's search query term. The term cannot be empty. The term may contain [Bing\n   * Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For example, to limit\n   * images to a specific domain, use the [site:](http://msdn.microsoft.com/library/ff795613.aspx)\n   * operator. To help improve relevance of an insights query (see\n   * [insightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken)),\n   * you should always include the user's query term. Use this parameter only with the Image Search\n   * API.Do not specify this parameter when calling the Trending Images API.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  search(query: string, options: Models.ImagesSearchOptionalParams, callback: msRest.ServiceCallback<Models.Images>): void;\n  search(query: string, options?: Models.ImagesSearchOptionalParams | msRest.ServiceCallback<Models.Images>, callback?: msRest.ServiceCallback<Models.Images>): Promise<Models.ImagesSearchResponse> {\n    return this.client.sendOperationRequest(\n      {\n        query,\n        options\n      },\n      searchOperationSpec,\n      callback) as Promise<Models.ImagesSearchResponse>;\n  }\n\n  /**\n   * @summary The Image Detail Search API lets you search on Bing and get back insights about an\n   * image, such as webpages that include the image. This section provides technical details about\n   * the query parameters and headers that you use to request insights of images and the JSON\n   * response objects that contain them. For examples that show how to make requests, see [Searching\n   * the Web for\n   * Images](https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web).\n   * @param query The user's search query term. The term cannot be empty. The term may contain [Bing\n   * Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For example, to limit\n   * images to a specific domain, use the [site:](http://msdn.microsoft.com/library/ff795613.aspx)\n   * operator. To help improve relevance of an insights query (see\n   * [insightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken)),\n   * you should always include the user's query term. Use this parameter only with the Image Search\n   * API.Do not specify this parameter when calling the Trending Images API.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImagesDetailsResponse>\n   */\n  details(query: string, options?: Models.ImagesDetailsOptionalParams): Promise<Models.ImagesDetailsResponse>;\n  /**\n   * @param query The user's search query term. The term cannot be empty. The term may contain [Bing\n   * Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For example, to limit\n   * images to a specific domain, use the [site:](http://msdn.microsoft.com/library/ff795613.aspx)\n   * operator. To help improve relevance of an insights query (see\n   * [insightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken)),\n   * you should always include the user's query term. Use this parameter only with the Image Search\n   * API.Do not specify this parameter when calling the Trending Images API.\n   * @param callback The callback\n   */\n  details(query: string, callback: msRest.ServiceCallback<Models.ImageInsights>): void;\n  /**\n   * @param query The user's search query term. The term cannot be empty. The term may contain [Bing\n   * Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For example, to limit\n   * images to a specific domain, use the [site:](http://msdn.microsoft.com/library/ff795613.aspx)\n   * operator. To help improve relevance of an insights query (see\n   * [insightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken)),\n   * you should always include the user's query term. Use this parameter only with the Image Search\n   * API.Do not specify this parameter when calling the Trending Images API.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  details(query: string, options: Models.ImagesDetailsOptionalParams, callback: msRest.ServiceCallback<Models.ImageInsights>): void;\n  details(query: string, options?: Models.ImagesDetailsOptionalParams | msRest.ServiceCallback<Models.ImageInsights>, callback?: msRest.ServiceCallback<Models.ImageInsights>): Promise<Models.ImagesDetailsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        query,\n        options\n      },\n      detailsOperationSpec,\n      callback) as Promise<Models.ImagesDetailsResponse>;\n  }\n\n  /**\n   * @summary The Image Trending Search API lets you search on Bing and get back a list of images\n   * that are trending based on search requests made by others. The images are broken out into\n   * different categories. For example, Popular People Searches. For a list of markets that support\n   * trending images, see [Trending\n   * Images](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-image-search/trending-images).\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImagesTrendingResponse>\n   */\n  trending(options?: Models.ImagesTrendingOptionalParams): Promise<Models.ImagesTrendingResponse>;\n  /**\n   * @param callback The callback\n   */\n  trending(callback: msRest.ServiceCallback<Models.TrendingImages>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  trending(options: Models.ImagesTrendingOptionalParams, callback: msRest.ServiceCallback<Models.TrendingImages>): void;\n  trending(options?: Models.ImagesTrendingOptionalParams | msRest.ServiceCallback<Models.TrendingImages>, callback?: msRest.ServiceCallback<Models.TrendingImages>): Promise<Models.ImagesTrendingResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      trendingOperationSpec,\n      callback) as Promise<Models.ImagesTrendingResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst searchOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"images/search\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.aspect,\n    Parameters.color,\n    Parameters.countryCode,\n    Parameters.count,\n    Parameters.freshness,\n    Parameters.height,\n    Parameters.id,\n    Parameters.imageContent,\n    Parameters.imageType,\n    Parameters.license,\n    Parameters.market,\n    Parameters.maxFileSize,\n    Parameters.maxHeight,\n    Parameters.maxWidth,\n    Parameters.minFileSize,\n    Parameters.minHeight,\n    Parameters.minWidth,\n    Parameters.offset,\n    Parameters.query,\n    Parameters.safeSearch,\n    Parameters.size,\n    Parameters.setLang,\n    Parameters.width\n  ],\n  headerParameters: [\n    Parameters.xBingApisSDK,\n    Parameters.acceptLanguage,\n    Parameters.userAgent,\n    Parameters.clientId,\n    Parameters.clientIp,\n    Parameters.location\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Images\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst detailsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"images/details\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.cropBottom,\n    Parameters.cropLeft,\n    Parameters.cropRight,\n    Parameters.cropTop,\n    Parameters.cropType,\n    Parameters.countryCode,\n    Parameters.id,\n    Parameters.imageUrl,\n    Parameters.insightsToken,\n    Parameters.modules,\n    Parameters.market,\n    Parameters.query,\n    Parameters.safeSearch,\n    Parameters.setLang\n  ],\n  headerParameters: [\n    Parameters.xBingApisSDK,\n    Parameters.acceptLanguage,\n    Parameters.contentType,\n    Parameters.userAgent,\n    Parameters.clientId,\n    Parameters.clientIp,\n    Parameters.location\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImageInsights\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst trendingOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"images/trending\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.countryCode,\n    Parameters.market,\n    Parameters.safeSearch,\n    Parameters.setLang\n  ],\n  headerParameters: [\n    Parameters.xBingApisSDK,\n    Parameters.acceptLanguage,\n    Parameters.userAgent,\n    Parameters.clientId,\n    Parameters.clientIp,\n    Parameters.location\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TrendingImages\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\n\nconst packageName = \"@azure/cognitiveservices-imagesearch\";\nconst packageVersion = \"3.0.1\";\n\nexport class ImageSearchClientContext extends msRest.ServiceClient {\n  endpoint?: string;\n  credentials: msRest.ServiceClientCredentials;\n\n  /**\n   * Initializes a new instance of the ImageSearchClientContext class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, options?: Models.ImageSearchClientOptions) {\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = msRest.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.endpoint = 'https://api.cognitive.microsoft.com';\n    this.baseUri = \"{Endpoint}/bing/v7.0\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n    if (options.endpoint !== null && options.endpoint !== undefined) {\n      this.endpoint = options.endpoint;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { ImageSearchClientContext } from \"./imageSearchClientContext\";\n\nclass ImageSearchClient extends ImageSearchClientContext {\n  // Operation groups\n  images: operations.ImagesOperations;\n\n  /**\n   * Initializes a new instance of the ImageSearchClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, options?: Models.ImageSearchClientOptions) {\n    super(credentials, options);\n    this.images = new operations.ImagesOperations(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  ImageSearchClient,\n  ImageSearchClientContext,\n  Models as ImageSearchModels,\n  Mappers as ImageSearchMappers\n};\nexport * from \"./operations\";\n"],"names":["msRest.QueryCollectionFormat","msRest.Serializer","Parameters.endpoint","Parameters.aspect","Parameters.color","Parameters.countryCode","Parameters.count","Parameters.freshness","Parameters.height","Parameters.id","Parameters.imageContent","Parameters.imageType","Parameters.license","Parameters.market","Parameters.maxFileSize","Parameters.maxHeight","Parameters.maxWidth","Parameters.minFileSize","Parameters.minHeight","Parameters.minWidth","Parameters.offset","Parameters.query","Parameters.safeSearch","Parameters.size","Parameters.setLang","Parameters.width","Parameters.xBingApisSDK","Parameters.acceptLanguage","Parameters.userAgent","Parameters.clientId","Parameters.clientIp","Parameters.location","Mappers.Images","Mappers.ErrorResponse","Parameters.cropBottom","Parameters.cropLeft","Parameters.cropRight","Parameters.cropTop","Parameters.cropType","Parameters.imageUrl","Parameters.insightsToken","Parameters.modules","Parameters.contentType","Mappers.ImageInsights","Mappers.TrendingImages","msRest.getDefaultUserAgentValue","msRest.ServiceClient","operations.ImagesOperations"],"mappings":"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"}